
***************
    PASS 8 (matchLists)
***************

PAT OUTPUT TREE:

_ROOT [0,8541,0,0,node,un]
   { [0,0,0,0,punct, ("level" 0)]
   _keyValue [6,31,6,16,node, ("key" "scopeName")]
      _key [6,17,5,16,node, ("text" "scopeName")]
         " [6,6,0,0,punct]
         scopeName [7,15,0,0,alpha]
         " [16,16,0,0,punct]
         : [17,17,0,0,punct]
      _value [19,30,5,28,node, ("text" "source.ecl")]
         " [19,19,0,0,punct]
         source [20,25,0,0,alpha]
         . [26,26,0,0,punct]
         ecl [27,29,0,0,alpha]
         " [30,30,0,0,punct]
      , [31,31,0,0,punct]
   _keyValue [37,83,6,16,node, ("key" "uuid")]
      _key [37,43,5,16,node, ("text" "uuid")]
         " [37,37,0,0,punct]
         uuid [38,41,0,0,alpha]
         " [42,42,0,0,punct]
         : [43,43,0,0,punct]
      _value [45,82,5,28,node, ("text" "8AE6478E-6717-4D6B-A1B4-0CB197840137")]
         " [45,45,0,0,punct]
         8 [46,46,0,0,num]
         AE [47,48,0,0,alpha]
         6478 [49,52,0,0,num]
         E [53,53,0,0,alpha]
         - [54,54,0,0,punct]
         6717 [55,58,0,0,num]
         - [59,59,0,0,punct]
         4 [60,60,0,0,num]
         D [61,61,0,0,alpha]
         6 [62,62,0,0,num]
         B [63,63,0,0,alpha]
         - [64,64,0,0,punct]
         A [65,65,0,0,alpha]
         1 [66,66,0,0,num]
         B [67,67,0,0,alpha]
         4 [68,68,0,0,num]
         - [69,69,0,0,punct]
         0 [70,70,0,0,num]
         CB [71,72,0,0,alpha]
         197840137 [73,81,0,0,num]
         " [82,82,0,0,punct]
      , [83,83,0,0,punct]
   _key [89,100,5,16,node, ("text" "fileTypes")]
      " [89,89,0,0,punct]
      fileTypes [90,98,0,0,alpha]
      " [99,99,0,0,punct]
      : [100,100,0,0,punct]
   [ [102,102,0,0,punct, ("level" 1)]
   _value [112,116,5,28,node, ("text" "ecl")]
      " [112,112,0,0,punct]
      ecl [113,115,0,0,alpha]
      " [116,116,0,0,punct]
   ] [122,122,0,0,punct, ("level" 1)]
   , [123,123,0,0,punct]
   _keyValue [129,142,6,16,node, ("key" "name")]
      _key [129,135,5,16,node, ("text" "name")]
         " [129,129,0,0,punct]
         name [130,133,0,0,alpha]
         " [134,134,0,0,punct]
         : [135,135,0,0,punct]
      _value [137,141,5,28,node, ("text" "ECL")]
         " [137,137,0,0,punct]
         ECL [138,140,0,0,alpha]
         " [141,141,0,0,punct]
      , [142,142,0,0,punct]
   _key [148,158,5,16,node, ("text" "patterns")]
      " [148,148,0,0,punct]
      patterns [149,156,0,0,alpha]
      " [157,157,0,0,punct]
      : [158,158,0,0,punct]
   [ [160,160,0,0,punct, ("level" 1)]
   { [170,170,0,0,punct, ("level" 2)]
   _keyValue [184,207,6,16,node, ("key" "include")]
      _key [184,193,5,16,node, ("text" "include")]
         " [184,184,0,0,punct]
         include [185,191,0,0,alpha]
         " [192,192,0,0,punct]
         : [193,193,0,0,punct]
      _value [195,207,5,28,node, ("text" "#expression")]
         " [195,195,0,0,punct]
         # [196,196,0,0,punct]
         expression [197,206,0,0,alpha]
         " [207,207,0,0,punct]
   } [217,217,0,0,punct, ("level" 2)]
   , [218,218,0,0,punct]
   { [228,228,0,0,punct, ("level" 2)]
   _keyValue [242,272,6,16,node, ("key" "name")]
      _key [242,248,5,16,node, ("text" "name")]
         " [242,242,0,0,punct]
         name [243,246,0,0,alpha]
         " [247,247,0,0,punct]
         : [248,248,0,0,punct]
      _value [250,271,5,28,node, ("text" "entity.name.type.ecl")]
         " [250,250,0,0,punct]
         entity [251,256,0,0,alpha]
         . [257,257,0,0,punct]
         name [258,261,0,0,alpha]
         . [262,262,0,0,punct]
         type [263,266,0,0,alpha]
         . [267,267,0,0,punct]
         ecl [268,270,0,0,alpha]
         " [271,271,0,0,punct]
      , [272,272,0,0,punct]
   _keyValue [286,433,6,16,node, ("key" "match")]
      _key [286,293,5,16,node, ("text" "match")]
         " [286,286,0,0,punct]
         match [287,291,0,0,alpha]
         " [292,292,0,0,punct]
         : [293,293,0,0,punct]
      _match [295,433,7,18,node, ("text" "#\\b(?i)append|break|declare|demangle|end|for|getdatatype|if|inmodule|loop|mangle|onwarning|option|set|stored|uniquename|workunit(?-i)\\b")]
         _value [295,433,5,28,node, ("text" "#\\b(?i)append|break|declare|demangle|end|for|getdatatype|if|inmodule|loop|mangle|onwarning|option|set|stored|uniquename|workunit(?-i)\\b")]
            " [295,295,0,0,punct]
            # [296,296,0,0,punct]
            \\ [297,297,0,0,punct]
            \\ [298,298,0,0,punct]
            b [299,299,0,0,alpha]
            ( [300,300,0,0,punct]
            ? [301,301,0,0,punct]
            i [302,302,0,0,alpha]
            ) [303,303,0,0,punct,fired]
            _list [304,424,8,14,node,fired,blt]
               append [304,309,0,0,alpha,fired]
               | [310,310,0,0,punct,fired]
               break [311,315,0,0,alpha,fired]
               | [316,316,0,0,punct,fired]
               declare [317,323,0,0,alpha,fired]
               | [324,324,0,0,punct,fired]
               demangle [325,332,0,0,alpha,fired]
               | [333,333,0,0,punct,fired]
               end [334,336,0,0,alpha,fired]
               | [337,337,0,0,punct,fired]
               for [338,340,0,0,alpha,fired]
               | [341,341,0,0,punct,fired]
               getdatatype [342,352,0,0,alpha,fired]
               | [353,353,0,0,punct,fired]
               if [354,355,0,0,alpha,fired]
               | [356,356,0,0,punct,fired]
               inmodule [357,364,0,0,alpha,fired]
               | [365,365,0,0,punct,fired]
               loop [366,369,0,0,alpha,fired]
               | [370,370,0,0,punct,fired]
               mangle [371,376,0,0,alpha,fired]
               | [377,377,0,0,punct,fired]
               onwarning [378,386,0,0,alpha,fired]
               | [387,387,0,0,punct,fired]
               option [388,393,0,0,alpha,fired]
               | [394,394,0,0,punct,fired]
               set [395,397,0,0,alpha,fired]
               | [398,398,0,0,punct,fired]
               stored [399,404,0,0,alpha,fired]
               | [405,405,0,0,punct,fired]
               uniquename [406,415,0,0,alpha,fired]
               | [416,416,0,0,punct,fired]
               workunit [417,424,0,0,alpha,fired]
            ( [425,425,0,0,punct]
            ? [426,426,0,0,punct]
            - [427,427,0,0,punct]
            i [428,428,0,0,alpha]
            ) [429,429,0,0,punct]
            \\ [430,430,0,0,punct]
            \\ [431,431,0,0,punct]
            b [432,432,0,0,alpha]
            " [433,433,0,0,punct]
   } [443,443,0,0,punct, ("level" 2)]
   , [444,444,0,0,punct]
   { [454,454,0,0,punct, ("level" 2)]
   _keyValue [468,498,6,16,node, ("key" "name")]
      _key [468,474,5,16,node, ("text" "name")]
         " [468,468,0,0,punct]
         name [469,472,0,0,alpha]
         " [473,473,0,0,punct]
         : [474,474,0,0,punct]
      _value [476,497,5,28,node, ("text" "entity.name.type.ecl")]
         " [476,476,0,0,punct]
         entity [477,482,0,0,alpha]
         . [483,483,0,0,punct]
         name [484,487,0,0,alpha]
         . [488,488,0,0,punct]
         type [489,492,0,0,alpha]
         . [493,493,0,0,punct]
         ecl [494,496,0,0,alpha]
         " [497,497,0,0,punct]
      , [498,498,0,0,punct]
   _keyValue [512,546,6,16,node, ("key" "match")]
      _key [512,519,5,16,node, ("text" "match")]
         " [512,512,0,0,punct]
         match [513,517,0,0,alpha]
         " [518,518,0,0,punct]
         : [519,519,0,0,punct]
      _match [521,546,7,18,node, ("text" "\\b(?i)real(?-i)(4|8)\\b")]
         _value [521,546,5,28,node, ("text" "\\b(?i)real(?-i)(4|8)\\b")]
            " [521,521,0,0,punct]
            \\ [522,522,0,0,punct]
            \\ [523,523,0,0,punct]
            b [524,524,0,0,alpha]
            ( [525,525,0,0,punct]
            ? [526,526,0,0,punct]
            i [527,527,0,0,alpha]
            ) [528,528,0,0,punct]
            real [529,532,0,0,alpha]
            ( [533,533,0,0,punct]
            ? [534,534,0,0,punct]
            - [535,535,0,0,punct]
            i [536,536,0,0,alpha]
            ) [537,537,0,0,punct]
            ( [538,538,0,0,punct,fired]
            _list [539,541,8,14,node,fired,blt]
               4 [539,539,0,0,num,fired]
               | [540,540,0,0,punct,fired]
               8 [541,541,0,0,num,fired]
            ) [542,542,0,0,punct]
            \\ [543,543,0,0,punct]
            \\ [544,544,0,0,punct]
            b [545,545,0,0,alpha]
            " [546,546,0,0,punct]
   } [556,556,0,0,punct, ("level" 2)]
   , [557,557,0,0,punct]
   { [567,567,0,0,punct, ("level" 2)]
   _keyValue [581,611,6,16,node, ("key" "name")]
      _key [581,587,5,16,node, ("text" "name")]
         " [581,581,0,0,punct]
         name [582,585,0,0,alpha]
         " [586,586,0,0,punct]
         : [587,587,0,0,punct]
      _value [589,610,5,28,node, ("text" "entity.name.type.ecl")]
         " [589,589,0,0,punct]
         entity [590,595,0,0,alpha]
         . [596,596,0,0,punct]
         name [597,600,0,0,alpha]
         . [601,601,0,0,punct]
         type [602,605,0,0,alpha]
         . [606,606,0,0,punct]
         ecl [607,609,0,0,alpha]
         " [610,610,0,0,punct]
      , [611,611,0,0,punct]
   _keyValue [625,670,6,16,node, ("key" "match")]
      _key [625,632,5,16,node, ("text" "match")]
         " [625,625,0,0,punct]
         match [626,630,0,0,alpha]
         " [631,631,0,0,punct]
         : [632,632,0,0,punct]
      _match [634,670,7,18,node, ("text" "\\b(?i)(u?)decimal(\\d+(_\\d+)?)\\b")]
         _value [634,670,5,28,node, ("text" "\\b(?i)(u?)decimal(\\d+(_\\d+)?)\\b")]
            " [634,634,0,0,punct]
            \\ [635,635,0,0,punct]
            \\ [636,636,0,0,punct]
            b [637,637,0,0,alpha]
            ( [638,638,0,0,punct]
            ? [639,639,0,0,punct]
            i [640,640,0,0,alpha]
            ) [641,641,0,0,punct]
            ( [642,642,0,0,punct]
            u [643,643,0,0,alpha]
            ? [644,644,0,0,punct]
            ) [645,645,0,0,punct]
            decimal [646,652,0,0,alpha]
            ( [653,653,0,0,punct]
            \\ [654,654,0,0,punct]
            \\ [655,655,0,0,punct]
            d [656,656,0,0,alpha]
            + [657,657,0,0,punct]
            ( [658,658,0,0,punct]
            _ [659,659,0,0,punct]
            \\ [660,660,0,0,punct]
            \\ [661,661,0,0,punct]
            d [662,662,0,0,alpha]
            + [663,663,0,0,punct]
            ) [664,664,0,0,punct]
            ? [665,665,0,0,punct]
            ) [666,666,0,0,punct]
            \\ [667,667,0,0,punct]
            \\ [668,668,0,0,punct]
            b [669,669,0,0,alpha]
            " [670,670,0,0,punct]
   } [680,680,0,0,punct, ("level" 2)]
   , [681,681,0,0,punct]
   { [691,691,0,0,punct, ("level" 2)]
   _keyValue [705,735,6,16,node, ("key" "name")]
      _key [705,711,5,16,node, ("text" "name")]
         " [705,705,0,0,punct]
         name [706,709,0,0,alpha]
         " [710,710,0,0,punct]
         : [711,711,0,0,punct]
      _value [713,734,5,28,node, ("text" "entity.name.type.ecl")]
         " [713,713,0,0,punct]
         entity [714,719,0,0,alpha]
         . [720,720,0,0,punct]
         name [721,724,0,0,alpha]
         . [725,725,0,0,punct]
         type [726,729,0,0,alpha]
         . [730,730,0,0,punct]
         ecl [731,733,0,0,alpha]
         " [734,734,0,0,punct]
      , [735,735,0,0,punct]
   _keyValue [749,771,6,16,node, ("key" "match")]
      _key [749,756,5,16,node, ("text" "match")]
         " [749,749,0,0,punct]
         match [750,754,0,0,alpha]
         " [755,755,0,0,punct]
         : [756,756,0,0,punct]
      _match [758,771,7,18,node, ("text" "\\bU(?='.*')")]
         _value [758,771,5,28,node, ("text" "\\bU(?='.*')")]
            " [758,758,0,0,punct]
            \\ [759,759,0,0,punct]
            \\ [760,760,0,0,punct]
            bU [761,762,0,0,alpha]
            ( [763,763,0,0,punct]
            ? [764,764,0,0,punct]
            = [765,765,0,0,punct]
            ' [766,766,0,0,punct]
            . [767,767,0,0,punct]
            * [768,768,0,0,punct]
            ' [769,769,0,0,punct]
            ) [770,770,0,0,punct]
            " [771,771,0,0,punct]
   } [781,781,0,0,punct, ("level" 2)]
   , [782,782,0,0,punct]
   { [792,792,0,0,punct, ("level" 2)]
   _keyValue [806,836,6,16,node, ("key" "name")]
      _key [806,812,5,16,node, ("text" "name")]
         " [806,806,0,0,punct]
         name [807,810,0,0,alpha]
         " [811,811,0,0,punct]
         : [812,812,0,0,punct]
      _value [814,835,5,28,node, ("text" "entity.name.type.ecl")]
         " [814,814,0,0,punct]
         entity [815,820,0,0,alpha]
         . [821,821,0,0,punct]
         name [822,825,0,0,alpha]
         . [826,826,0,0,punct]
         type [827,830,0,0,alpha]
         . [831,831,0,0,punct]
         ecl [832,834,0,0,alpha]
         " [835,835,0,0,punct]
      , [836,836,0,0,punct]
   _keyValue [850,894,6,16,node, ("key" "match")]
      _key [850,857,5,16,node, ("text" "match")]
         " [850,850,0,0,punct]
         match [851,855,0,0,alpha]
         " [856,856,0,0,punct]
         : [857,857,0,0,punct]
      _match [859,894,7,18,node, ("text" "\\b(?i:(integer|unsigned))[1-8]\\b")]
         _value [859,894,5,28,node, ("text" "\\b(?i:(integer|unsigned))[1-8]\\b")]
            " [859,859,0,0,punct]
            \\ [860,860,0,0,punct]
            \\ [861,861,0,0,punct]
            b [862,862,0,0,alpha]
            ( [863,863,0,0,punct]
            ? [864,864,0,0,punct]
            i [865,865,0,0,alpha]
            : [866,866,0,0,punct]
            ( [867,867,0,0,punct,fired]
            _list [868,883,8,14,node,fired,blt]
               integer [868,874,0,0,alpha,fired]
               | [875,875,0,0,punct,fired]
               unsigned [876,883,0,0,alpha,fired]
            ) [884,884,0,0,punct]
            ) [885,885,0,0,punct]
            [ [886,886,0,0,punct, ("level" 3)]
            1 [887,887,0,0,num]
            - [888,888,0,0,punct]
            8 [889,889,0,0,num]
            ] [890,890,0,0,punct, ("level" 3)]
            \\ [891,891,0,0,punct]
            \\ [892,892,0,0,punct]
            b [893,893,0,0,alpha]
            " [894,894,0,0,punct]
   } [904,904,0,0,punct, ("level" 2)]
   , [905,905,0,0,punct]
   { [915,915,0,0,punct, ("level" 2)]
   _keyValue [929,959,6,16,node, ("key" "name")]
      _key [929,935,5,16,node, ("text" "name")]
         " [929,929,0,0,punct]
         name [930,933,0,0,alpha]
         " [934,934,0,0,punct]
         : [935,935,0,0,punct]
      _value [937,958,5,28,node, ("text" "entity.name.type.ecl")]
         " [937,937,0,0,punct]
         entity [938,943,0,0,alpha]
         . [944,944,0,0,punct]
         name [945,948,0,0,alpha]
         . [949,949,0,0,punct]
         type [950,953,0,0,alpha]
         . [954,954,0,0,punct]
         ecl [955,957,0,0,alpha]
         " [958,958,0,0,punct]
      , [959,959,0,0,punct]
   _keyValue [973,1053,6,16,node, ("key" "match")]
      _key [973,980,5,16,node, ("text" "match")]
         " [973,973,0,0,punct]
         match [974,978,0,0,alpha]
         " [979,979,0,0,punct]
         : [980,980,0,0,punct]
      _match [982,1053,7,18,node, ("text" "\\b(?i:(data|string|qstring|varstring|varunicode|unicode|utf8))\\d+\\b")]
         _value [982,1053,5,28,node, ("text" "\\b(?i:(data|string|qstring|varstring|varunicode|unicode|utf8))\\d+\\b")]
            " [982,982,0,0,punct]
            \\ [983,983,0,0,punct]
            \\ [984,984,0,0,punct]
            b [985,985,0,0,alpha]
            ( [986,986,0,0,punct]
            ? [987,987,0,0,punct]
            i [988,988,0,0,alpha]
            : [989,989,0,0,punct]
            ( [990,990,0,0,punct,fired]
            _list [991,1043,8,14,node,fired,blt]
               data [991,994,0,0,alpha,fired]
               | [995,995,0,0,punct,fired]
               string [996,1001,0,0,alpha,fired]
               | [1002,1002,0,0,punct,fired]
               qstring [1003,1009,0,0,alpha,fired]
               | [1010,1010,0,0,punct,fired]
               varstring [1011,1019,0,0,alpha,fired]
               | [1020,1020,0,0,punct,fired]
               varunicode [1021,1030,0,0,alpha,fired]
               | [1031,1031,0,0,punct,fired]
               unicode [1032,1038,0,0,alpha,fired]
               | [1039,1039,0,0,punct,fired]
               utf [1040,1042,0,0,alpha,fired]
               8 [1043,1043,0,0,num,fired]
            ) [1044,1044,0,0,punct]
            ) [1045,1045,0,0,punct]
            \\ [1046,1046,0,0,punct]
            \\ [1047,1047,0,0,punct]
            d [1048,1048,0,0,alpha]
            + [1049,1049,0,0,punct]
            \\ [1050,1050,0,0,punct]
            \\ [1051,1051,0,0,punct]
            b [1052,1052,0,0,alpha]
            " [1053,1053,0,0,punct]
   } [1063,1063,0,0,punct, ("level" 2)]
   , [1064,1064,0,0,punct]
   { [1074,1074,0,0,punct, ("level" 2)]
   _keyValue [1088,1118,6,16,node, ("key" "name")]
      _key [1088,1094,5,16,node, ("text" "name")]
         " [1088,1088,0,0,punct]
         name [1089,1092,0,0,alpha]
         " [1093,1093,0,0,punct]
         : [1094,1094,0,0,punct]
      _value [1096,1117,5,28,node, ("text" "entity.name.type.ecl")]
         " [1096,1096,0,0,punct]
         entity [1097,1102,0,0,alpha]
         . [1103,1103,0,0,punct]
         name [1104,1107,0,0,alpha]
         . [1108,1108,0,0,punct]
         type [1109,1112,0,0,alpha]
         . [1113,1113,0,0,punct]
         ecl [1114,1116,0,0,alpha]
         " [1117,1117,0,0,punct]
      , [1118,1118,0,0,punct]
   _keyValue [1132,1341,6,16,node, ("key" "match")]
      _key [1132,1139,5,16,node, ("text" "match")]
         " [1132,1132,0,0,punct]
         match [1133,1137,0,0,alpha]
         " [1138,1138,0,0,punct]
         : [1139,1139,0,0,punct]
      _match [1141,1341,7,18,node, ("text" "\\b(?i:(ascii|big_endian|boolean|data|decimal|ebcdic|grouped|integer|linkcounted|pattern|qstring|real|record|rule|set of|streamed|string|token|udecimal|unicode|utf8|unsigned|varstring|varunicode))\\b")]
         _value [1141,1341,5,28,node, ("text" "\\b(?i:(ascii|big_endian|boolean|data|decimal|ebcdic|grouped|integer|linkcounted|pattern|qstring|real|record|rule|set of|streamed|string|token|udecimal|unicode|utf8|unsigned|varstring|varunicode))\\b")]
            " [1141,1141,0,0,punct]
            \\ [1142,1142,0,0,punct]
            \\ [1143,1143,0,0,punct]
            b [1144,1144,0,0,alpha]
            ( [1145,1145,0,0,punct]
            ? [1146,1146,0,0,punct]
            i [1147,1147,0,0,alpha]
            : [1148,1148,0,0,punct]
            ( [1149,1149,0,0,punct,fired]
            _list [1150,1335,8,14,node,fired,blt]
               ascii [1150,1154,0,0,alpha,fired]
               | [1155,1155,0,0,punct,fired]
               big [1156,1158,0,0,alpha,fired]
               _ [1159,1159,0,0,punct,fired]
               endian [1160,1165,0,0,alpha,fired]
               | [1166,1166,0,0,punct,fired]
               boolean [1167,1173,0,0,alpha,fired]
               | [1174,1174,0,0,punct,fired]
               data [1175,1178,0,0,alpha,fired]
               | [1179,1179,0,0,punct,fired]
               decimal [1180,1186,0,0,alpha,fired]
               | [1187,1187,0,0,punct,fired]
               ebcdic [1188,1193,0,0,alpha,fired]
               | [1194,1194,0,0,punct,fired]
               grouped [1195,1201,0,0,alpha,fired]
               | [1202,1202,0,0,punct,fired]
               integer [1203,1209,0,0,alpha,fired]
               | [1210,1210,0,0,punct,fired]
               linkcounted [1211,1221,0,0,alpha,fired]
               | [1222,1222,0,0,punct,fired]
               pattern [1223,1229,0,0,alpha,fired]
               | [1230,1230,0,0,punct,fired]
               qstring [1231,1237,0,0,alpha,fired]
               | [1238,1238,0,0,punct,fired]
               real [1239,1242,0,0,alpha,fired]
               | [1243,1243,0,0,punct,fired]
               record [1244,1249,0,0,alpha,fired]
               | [1250,1250,0,0,punct,fired]
               rule [1251,1254,0,0,alpha,fired]
               | [1255,1255,0,0,punct,fired]
               set [1256,1258,0,0,alpha,fired]
               of [1260,1261,0,0,alpha,fired]
               | [1262,1262,0,0,punct,fired]
               streamed [1263,1270,0,0,alpha,fired]
               | [1271,1271,0,0,punct,fired]
               string [1272,1277,0,0,alpha,fired]
               | [1278,1278,0,0,punct,fired]
               token [1279,1283,0,0,alpha,fired]
               | [1284,1284,0,0,punct,fired]
               udecimal [1285,1292,0,0,alpha,fired]
               | [1293,1293,0,0,punct,fired]
               unicode [1294,1300,0,0,alpha,fired]
               | [1301,1301,0,0,punct,fired]
               utf [1302,1304,0,0,alpha,fired]
               8 [1305,1305,0,0,num,fired]
               | [1306,1306,0,0,punct,fired]
               unsigned [1307,1314,0,0,alpha,fired]
               | [1315,1315,0,0,punct,fired]
               varstring [1316,1324,0,0,alpha,fired]
               | [1325,1325,0,0,punct,fired]
               varunicode [1326,1335,0,0,alpha,fired]
            ) [1336,1336,0,0,punct]
            ) [1337,1337,0,0,punct]
            \\ [1338,1338,0,0,punct]
            \\ [1339,1339,0,0,punct]
            b [1340,1340,0,0,alpha]
            " [1341,1341,0,0,punct]
   } [1351,1351,0,0,punct, ("level" 2)]
   , [1352,1352,0,0,punct]
   { [1362,1362,0,0,punct, ("level" 2)]
   _keyValue [1376,1418,6,16,node, ("key" "name")]
      _key [1376,1382,5,16,node, ("text" "name")]
         " [1376,1376,0,0,punct]
         name [1377,1380,0,0,alpha]
         " [1381,1381,0,0,punct]
         : [1382,1382,0,0,punct]
      _value [1384,1417,5,28,node, ("text" "entity.other.inherited-class.ecl")]
         " [1384,1384,0,0,punct]
         entity [1385,1390,0,0,alpha]
         . [1391,1391,0,0,punct]
         other [1392,1396,0,0,alpha]
         . [1397,1397,0,0,punct]
         inherited [1398,1406,0,0,alpha]
         - [1407,1407,0,0,punct]
         class [1408,1412,0,0,alpha]
         . [1413,1413,0,0,punct]
         ecl [1414,1416,0,0,alpha]
         " [1417,1417,0,0,punct]
      , [1418,1418,0,0,punct]
   _keyValue [1432,1480,6,16,node, ("key" "match")]
      _key [1432,1439,5,16,node, ("text" "match")]
         " [1432,1432,0,0,punct]
         match [1433,1437,0,0,alpha]
         " [1438,1438,0,0,punct]
         : [1439,1439,0,0,punct]
      _match [1441,1480,7,18,node, ("text" "(?i)[A-Za-z_]+(?!=\\bmodule\\()(?=\\))")]
         _value [1441,1480,5,28,node, ("text" "(?i)[A-Za-z_]+(?!=\\bmodule\\()(?=\\))")]
            " [1441,1441,0,0,punct]
            ( [1442,1442,0,0,punct]
            ? [1443,1443,0,0,punct]
            i [1444,1444,0,0,alpha]
            ) [1445,1445,0,0,punct]
            [ [1446,1446,0,0,punct, ("level" 3)]
            A [1447,1447,0,0,alpha]
            - [1448,1448,0,0,punct]
            Za [1449,1450,0,0,alpha]
            - [1451,1451,0,0,punct]
            z [1452,1452,0,0,alpha]
            _ [1453,1453,0,0,punct]
            ] [1454,1454,0,0,punct, ("level" 3)]
            + [1455,1455,0,0,punct]
            ( [1456,1456,0,0,punct]
            ? [1457,1457,0,0,punct]
            ! [1458,1458,0,0,punct]
            = [1459,1459,0,0,punct]
            \\ [1460,1460,0,0,punct]
            \\ [1461,1461,0,0,punct]
            bmodule [1462,1468,0,0,alpha]
            \\ [1469,1469,0,0,punct]
            \\ [1470,1470,0,0,punct]
            ( [1471,1471,0,0,punct]
            ) [1472,1472,0,0,punct]
            ( [1473,1473,0,0,punct]
            ? [1474,1474,0,0,punct]
            = [1475,1475,0,0,punct]
            \\ [1476,1476,0,0,punct]
            \\ [1477,1477,0,0,punct]
            ) [1478,1478,0,0,punct]
            ) [1479,1479,0,0,punct]
            " [1480,1480,0,0,punct]
   } [1490,1490,0,0,punct, ("level" 2)]
   , [1491,1491,0,0,punct]
   { [1501,1501,0,0,punct, ("level" 2)]
   _keyValue [1515,1542,6,16,node, ("key" "name")]
      _key [1515,1521,5,16,node, ("text" "name")]
         " [1515,1515,0,0,punct]
         name [1516,1519,0,0,alpha]
         " [1520,1520,0,0,punct]
         : [1521,1521,0,0,punct]
      _value [1523,1541,5,28,node, ("text" "keyword.other.ecl")]
         " [1523,1523,0,0,punct]
         keyword [1524,1530,0,0,alpha]
         . [1531,1531,0,0,punct]
         other [1532,1536,0,0,alpha]
         . [1537,1537,0,0,punct]
         ecl [1538,1540,0,0,alpha]
         " [1541,1541,0,0,punct]
      , [1542,1542,0,0,punct]
   _keyValue [1556,2624,6,16,node, ("key" "match")]
      _key [1556,1563,5,16,node, ("text" "match")]
         " [1556,1556,0,0,punct]
         match [1557,1561,0,0,alpha]
         " [1562,1562,0,0,punct]
         : [1563,1563,0,0,punct]
      _match [1565,2624,7,18,node, ("text" "\\b(?i:(and|or|in|not|all|any|as|from|atmost|before|beginc|best|between|case|const|counter|csv|descend|embed|encrypt|end|endc|endembed|endmacro|enum|except|exclusive|expire|export|extend|fail|few|first|flat|full|function|functionmacro|group|heading|hole|ifblock|import|in|joined|keep|keyed|last|left|limit|load|local|locale|lookup|macro|many|maxcount|maxlength|min skew|module|interface|named|nocase|noroot|noscan|nosort|of|only|opt|outer|overwrite|packed|partition|penalty|physicallength|pipe|quote|record|repeat|return|right|rows|scan|self|separator|service|shared|skew|skip|sql|store|terminator|thor|threshold|token|transform|trim|type|unicodeorder|unsorted|validate|virtual|whole|wild|within|xml|xpath|after|cluster|compressed|compression|default|encoding|escape|fileposition|forward|grouped|inner|internal|linkcounted|literal|little_endian|lzw|mofn|multiple|namespace|nocase|wnotrim|noxpath|onfail|overwrite|prefetch|retry|right1|right2|rowset|xpath|scope|smart|soapaction|stable|timelimit|timeout|unordered|unstable|update|use|width|__compressed__))\\b")]
         _value [1565,2624,5,28,node, ("text" "\\b(?i:(and|or|in|not|all|any|as|from|atmost|before|beginc|best|between|case|const|counter|csv|descend|embed|encrypt|end|endc|endembed|endmacro|enum|except|exclusive|expire|export|extend|fail|few|first|flat|full|function|functionmacro|group|heading|hole|ifblock|import|in|joined|keep|keyed|last|left|limit|load|local|locale|lookup|macro|many|maxcount|maxlength|min skew|module|interface|named|nocase|noroot|noscan|nosort|of|only|opt|outer|overwrite|packed|partition|penalty|physicallength|pipe|quote|record|repeat|return|right|rows|scan|self|separator|service|shared|skew|skip|sql|store|terminator|thor|threshold|token|transform|trim|type|unicodeorder|unsorted|validate|virtual|whole|wild|within|xml|xpath|after|cluster|compressed|compression|default|encoding|escape|fileposition|forward|grouped|inner|internal|linkcounted|literal|little_endian|lzw|mofn|multiple|namespace|nocase|wnotrim|noxpath|onfail|overwrite|prefetch|retry|right1|right2|rowset|xpath|scope|smart|soapaction|stable|timelimit|timeout|unordered|unstable|update|use|width|__compressed__))\\b")]
            " [1565,1565,0,0,punct]
            \\ [1566,1566,0,0,punct]
            \\ [1567,1567,0,0,punct]
            b [1568,1568,0,0,alpha]
            ( [1569,1569,0,0,punct]
            ? [1570,1570,0,0,punct]
            i [1571,1571,0,0,alpha]
            : [1572,1572,0,0,punct]
            ( [1573,1573,0,0,punct,fired]
            _list [1574,2618,8,14,node,fired,blt]
               and [1574,1576,0,0,alpha,fired]
               | [1577,1577,0,0,punct,fired]
               or [1578,1579,0,0,alpha,fired]
               | [1580,1580,0,0,punct,fired]
               in [1581,1582,0,0,alpha,fired]
               | [1583,1583,0,0,punct,fired]
               not [1584,1586,0,0,alpha,fired]
               | [1587,1587,0,0,punct,fired]
               all [1588,1590,0,0,alpha,fired]
               | [1591,1591,0,0,punct,fired]
               any [1592,1594,0,0,alpha,fired]
               | [1595,1595,0,0,punct,fired]
               as [1596,1597,0,0,alpha,fired]
               | [1598,1598,0,0,punct,fired]
               from [1599,1602,0,0,alpha,fired]
               | [1603,1603,0,0,punct,fired]
               atmost [1604,1609,0,0,alpha,fired]
               | [1610,1610,0,0,punct,fired]
               before [1611,1616,0,0,alpha,fired]
               | [1617,1617,0,0,punct,fired]
               beginc [1618,1623,0,0,alpha,fired]
               | [1624,1624,0,0,punct,fired]
               best [1625,1628,0,0,alpha,fired]
               | [1629,1629,0,0,punct,fired]
               between [1630,1636,0,0,alpha,fired]
               | [1637,1637,0,0,punct,fired]
               case [1638,1641,0,0,alpha,fired]
               | [1642,1642,0,0,punct,fired]
               const [1643,1647,0,0,alpha,fired]
               | [1648,1648,0,0,punct,fired]
               counter [1649,1655,0,0,alpha,fired]
               | [1656,1656,0,0,punct,fired]
               csv [1657,1659,0,0,alpha,fired]
               | [1660,1660,0,0,punct,fired]
               descend [1661,1667,0,0,alpha,fired]
               | [1668,1668,0,0,punct,fired]
               embed [1669,1673,0,0,alpha,fired]
               | [1674,1674,0,0,punct,fired]
               encrypt [1675,1681,0,0,alpha,fired]
               | [1682,1682,0,0,punct,fired]
               end [1683,1685,0,0,alpha,fired]
               | [1686,1686,0,0,punct,fired]
               endc [1687,1690,0,0,alpha,fired]
               | [1691,1691,0,0,punct,fired]
               endembed [1692,1699,0,0,alpha,fired]
               | [1700,1700,0,0,punct,fired]
               endmacro [1701,1708,0,0,alpha,fired]
               | [1709,1709,0,0,punct,fired]
               enum [1710,1713,0,0,alpha,fired]
               | [1714,1714,0,0,punct,fired]
               except [1715,1720,0,0,alpha,fired]
               | [1721,1721,0,0,punct,fired]
               exclusive [1722,1730,0,0,alpha,fired]
               | [1731,1731,0,0,punct,fired]
               expire [1732,1737,0,0,alpha,fired]
               | [1738,1738,0,0,punct,fired]
               export [1739,1744,0,0,alpha,fired]
               | [1745,1745,0,0,punct,fired]
               extend [1746,1751,0,0,alpha,fired]
               | [1752,1752,0,0,punct,fired]
               fail [1753,1756,0,0,alpha,fired]
               | [1757,1757,0,0,punct,fired]
               few [1758,1760,0,0,alpha,fired]
               | [1761,1761,0,0,punct,fired]
               first [1762,1766,0,0,alpha,fired]
               | [1767,1767,0,0,punct,fired]
               flat [1768,1771,0,0,alpha,fired]
               | [1772,1772,0,0,punct,fired]
               full [1773,1776,0,0,alpha,fired]
               | [1777,1777,0,0,punct,fired]
               function [1778,1785,0,0,alpha,fired]
               | [1786,1786,0,0,punct,fired]
               functionmacro [1787,1799,0,0,alpha,fired]
               | [1800,1800,0,0,punct,fired]
               group [1801,1805,0,0,alpha,fired]
               | [1806,1806,0,0,punct,fired]
               heading [1807,1813,0,0,alpha,fired]
               | [1814,1814,0,0,punct,fired]
               hole [1815,1818,0,0,alpha,fired]
               | [1819,1819,0,0,punct,fired]
               ifblock [1820,1826,0,0,alpha,fired]
               | [1827,1827,0,0,punct,fired]
               import [1828,1833,0,0,alpha,fired]
               | [1834,1834,0,0,punct,fired]
               in [1835,1836,0,0,alpha,fired]
               | [1837,1837,0,0,punct,fired]
               joined [1838,1843,0,0,alpha,fired]
               | [1844,1844,0,0,punct,fired]
               keep [1845,1848,0,0,alpha,fired]
               | [1849,1849,0,0,punct,fired]
               keyed [1850,1854,0,0,alpha,fired]
               | [1855,1855,0,0,punct,fired]
               last [1856,1859,0,0,alpha,fired]
               | [1860,1860,0,0,punct,fired]
               left [1861,1864,0,0,alpha,fired]
               | [1865,1865,0,0,punct,fired]
               limit [1866,1870,0,0,alpha,fired]
               | [1871,1871,0,0,punct,fired]
               load [1872,1875,0,0,alpha,fired]
               | [1876,1876,0,0,punct,fired]
               local [1877,1881,0,0,alpha,fired]
               | [1882,1882,0,0,punct,fired]
               locale [1883,1888,0,0,alpha,fired]
               | [1889,1889,0,0,punct,fired]
               lookup [1890,1895,0,0,alpha,fired]
               | [1896,1896,0,0,punct,fired]
               macro [1897,1901,0,0,alpha,fired]
               | [1902,1902,0,0,punct,fired]
               many [1903,1906,0,0,alpha,fired]
               | [1907,1907,0,0,punct,fired]
               maxcount [1908,1915,0,0,alpha,fired]
               | [1916,1916,0,0,punct,fired]
               maxlength [1917,1925,0,0,alpha,fired]
               | [1926,1926,0,0,punct,fired]
               min [1927,1929,0,0,alpha,fired]
               skew [1931,1934,0,0,alpha,fired]
               | [1935,1935,0,0,punct,fired]
               module [1936,1941,0,0,alpha,fired]
               | [1942,1942,0,0,punct,fired]
               interface [1943,1951,0,0,alpha,fired]
               | [1952,1952,0,0,punct,fired]
               named [1953,1957,0,0,alpha,fired]
               | [1958,1958,0,0,punct,fired]
               nocase [1959,1964,0,0,alpha,fired]
               | [1965,1965,0,0,punct,fired]
               noroot [1966,1971,0,0,alpha,fired]
               | [1972,1972,0,0,punct,fired]
               noscan [1973,1978,0,0,alpha,fired]
               | [1979,1979,0,0,punct,fired]
               nosort [1980,1985,0,0,alpha,fired]
               | [1986,1986,0,0,punct,fired]
               of [1987,1988,0,0,alpha,fired]
               | [1989,1989,0,0,punct,fired]
               only [1990,1993,0,0,alpha,fired]
               | [1994,1994,0,0,punct,fired]
               opt [1995,1997,0,0,alpha,fired]
               | [1998,1998,0,0,punct,fired]
               outer [1999,2003,0,0,alpha,fired]
               | [2004,2004,0,0,punct,fired]
               overwrite [2005,2013,0,0,alpha,fired]
               | [2014,2014,0,0,punct,fired]
               packed [2015,2020,0,0,alpha,fired]
               | [2021,2021,0,0,punct,fired]
               partition [2022,2030,0,0,alpha,fired]
               | [2031,2031,0,0,punct,fired]
               penalty [2032,2038,0,0,alpha,fired]
               | [2039,2039,0,0,punct,fired]
               physicallength [2040,2053,0,0,alpha,fired]
               | [2054,2054,0,0,punct,fired]
               pipe [2055,2058,0,0,alpha,fired]
               | [2059,2059,0,0,punct,fired]
               quote [2060,2064,0,0,alpha,fired]
               | [2065,2065,0,0,punct,fired]
               record [2066,2071,0,0,alpha,fired]
               | [2072,2072,0,0,punct,fired]
               repeat [2073,2078,0,0,alpha,fired]
               | [2079,2079,0,0,punct,fired]
               return [2080,2085,0,0,alpha,fired]
               | [2086,2086,0,0,punct,fired]
               right [2087,2091,0,0,alpha,fired]
               | [2092,2092,0,0,punct,fired]
               rows [2093,2096,0,0,alpha,fired]
               | [2097,2097,0,0,punct,fired]
               scan [2098,2101,0,0,alpha,fired]
               | [2102,2102,0,0,punct,fired]
               self [2103,2106,0,0,alpha,fired]
               | [2107,2107,0,0,punct,fired]
               separator [2108,2116,0,0,alpha,fired]
               | [2117,2117,0,0,punct,fired]
               service [2118,2124,0,0,alpha,fired]
               | [2125,2125,0,0,punct,fired]
               shared [2126,2131,0,0,alpha,fired]
               | [2132,2132,0,0,punct,fired]
               skew [2133,2136,0,0,alpha,fired]
               | [2137,2137,0,0,punct,fired]
               skip [2138,2141,0,0,alpha,fired]
               | [2142,2142,0,0,punct,fired]
               sql [2143,2145,0,0,alpha,fired]
               | [2146,2146,0,0,punct,fired]
               store [2147,2151,0,0,alpha,fired]
               | [2152,2152,0,0,punct,fired]
               terminator [2153,2162,0,0,alpha,fired]
               | [2163,2163,0,0,punct,fired]
               thor [2164,2167,0,0,alpha,fired]
               | [2168,2168,0,0,punct,fired]
               threshold [2169,2177,0,0,alpha,fired]
               | [2178,2178,0,0,punct,fired]
               token [2179,2183,0,0,alpha,fired]
               | [2184,2184,0,0,punct,fired]
               transform [2185,2193,0,0,alpha,fired]
               | [2194,2194,0,0,punct,fired]
               trim [2195,2198,0,0,alpha,fired]
               | [2199,2199,0,0,punct,fired]
               type [2200,2203,0,0,alpha,fired]
               | [2204,2204,0,0,punct,fired]
               unicodeorder [2205,2216,0,0,alpha,fired]
               | [2217,2217,0,0,punct,fired]
               unsorted [2218,2225,0,0,alpha,fired]
               | [2226,2226,0,0,punct,fired]
               validate [2227,2234,0,0,alpha,fired]
               | [2235,2235,0,0,punct,fired]
               virtual [2236,2242,0,0,alpha,fired]
               | [2243,2243,0,0,punct,fired]
               whole [2244,2248,0,0,alpha,fired]
               | [2249,2249,0,0,punct,fired]
               wild [2250,2253,0,0,alpha,fired]
               | [2254,2254,0,0,punct,fired]
               within [2255,2260,0,0,alpha,fired]
               | [2261,2261,0,0,punct,fired]
               xml [2262,2264,0,0,alpha,fired]
               | [2265,2265,0,0,punct,fired]
               xpath [2266,2270,0,0,alpha,fired]
               | [2271,2271,0,0,punct,fired]
               after [2272,2276,0,0,alpha,fired]
               | [2277,2277,0,0,punct,fired]
               cluster [2278,2284,0,0,alpha,fired]
               | [2285,2285,0,0,punct,fired]
               compressed [2286,2295,0,0,alpha,fired]
               | [2296,2296,0,0,punct,fired]
               compression [2297,2307,0,0,alpha,fired]
               | [2308,2308,0,0,punct,fired]
               default [2309,2315,0,0,alpha,fired]
               | [2316,2316,0,0,punct,fired]
               encoding [2317,2324,0,0,alpha,fired]
               | [2325,2325,0,0,punct,fired]
               escape [2326,2331,0,0,alpha,fired]
               | [2332,2332,0,0,punct,fired]
               fileposition [2333,2344,0,0,alpha,fired]
               | [2345,2345,0,0,punct,fired]
               forward [2346,2352,0,0,alpha,fired]
               | [2353,2353,0,0,punct,fired]
               grouped [2354,2360,0,0,alpha,fired]
               | [2361,2361,0,0,punct,fired]
               inner [2362,2366,0,0,alpha,fired]
               | [2367,2367,0,0,punct,fired]
               internal [2368,2375,0,0,alpha,fired]
               | [2376,2376,0,0,punct,fired]
               linkcounted [2377,2387,0,0,alpha,fired]
               | [2388,2388,0,0,punct,fired]
               literal [2389,2395,0,0,alpha,fired]
               | [2396,2396,0,0,punct,fired]
               little [2397,2402,0,0,alpha,fired]
               _ [2403,2403,0,0,punct,fired]
               endian [2404,2409,0,0,alpha,fired]
               | [2410,2410,0,0,punct,fired]
               lzw [2411,2413,0,0,alpha,fired]
               | [2414,2414,0,0,punct,fired]
               mofn [2415,2418,0,0,alpha,fired]
               | [2419,2419,0,0,punct,fired]
               multiple [2420,2427,0,0,alpha,fired]
               | [2428,2428,0,0,punct,fired]
               namespace [2429,2437,0,0,alpha,fired]
               | [2438,2438,0,0,punct,fired]
               nocase [2439,2444,0,0,alpha,fired]
               | [2445,2445,0,0,punct,fired]
               wnotrim [2446,2452,0,0,alpha,fired]
               | [2453,2453,0,0,punct,fired]
               noxpath [2454,2460,0,0,alpha,fired]
               | [2461,2461,0,0,punct,fired]
               onfail [2462,2467,0,0,alpha,fired]
               | [2468,2468,0,0,punct,fired]
               overwrite [2469,2477,0,0,alpha,fired]
               | [2478,2478,0,0,punct,fired]
               prefetch [2479,2486,0,0,alpha,fired]
               | [2487,2487,0,0,punct,fired]
               retry [2488,2492,0,0,alpha,fired]
               | [2493,2493,0,0,punct,fired]
               right [2494,2498,0,0,alpha,fired]
               1 [2499,2499,0,0,num,fired]
               | [2500,2500,0,0,punct,fired]
               right [2501,2505,0,0,alpha,fired]
               2 [2506,2506,0,0,num,fired]
               | [2507,2507,0,0,punct,fired]
               rowset [2508,2513,0,0,alpha,fired]
               | [2514,2514,0,0,punct,fired]
               xpath [2515,2519,0,0,alpha,fired]
               | [2520,2520,0,0,punct,fired]
               scope [2521,2525,0,0,alpha,fired]
               | [2526,2526,0,0,punct,fired]
               smart [2527,2531,0,0,alpha,fired]
               | [2532,2532,0,0,punct,fired]
               soapaction [2533,2542,0,0,alpha,fired]
               | [2543,2543,0,0,punct,fired]
               stable [2544,2549,0,0,alpha,fired]
               | [2550,2550,0,0,punct,fired]
               timelimit [2551,2559,0,0,alpha,fired]
               | [2560,2560,0,0,punct,fired]
               timeout [2561,2567,0,0,alpha,fired]
               | [2568,2568,0,0,punct,fired]
               unordered [2569,2577,0,0,alpha,fired]
               | [2578,2578,0,0,punct,fired]
               unstable [2579,2586,0,0,alpha,fired]
               | [2587,2587,0,0,punct,fired]
               update [2588,2593,0,0,alpha,fired]
               | [2594,2594,0,0,punct,fired]
               use [2595,2597,0,0,alpha,fired]
               | [2598,2598,0,0,punct,fired]
               width [2599,2603,0,0,alpha,fired]
               | [2604,2604,0,0,punct,fired]
               _ [2605,2605,0,0,punct,fired]
               _ [2606,2606,0,0,punct,fired]
               compressed [2607,2616,0,0,alpha,fired]
               _ [2617,2617,0,0,punct,fired]
               _ [2618,2618,0,0,punct,fired]
            ) [2619,2619,0,0,punct]
            ) [2620,2620,0,0,punct]
            \\ [2621,2621,0,0,punct]
            \\ [2622,2622,0,0,punct]
            b [2623,2623,0,0,alpha]
            " [2624,2624,0,0,punct]
   } [2634,2634,0,0,punct, ("level" 2)]
   , [2635,2635,0,0,punct]
   { [2645,2645,0,0,punct, ("level" 2)]
   _keyValue [2659,2686,6,16,node, ("key" "name")]
      _key [2659,2665,5,16,node, ("text" "name")]
         " [2659,2659,0,0,punct]
         name [2660,2663,0,0,alpha]
         " [2664,2664,0,0,punct]
         : [2665,2665,0,0,punct]
      _value [2667,2685,5,28,node, ("text" "keyword.other.ecl")]
         " [2667,2667,0,0,punct]
         keyword [2668,2674,0,0,alpha]
         . [2675,2675,0,0,punct]
         other [2676,2680,0,0,alpha]
         . [2681,2681,0,0,punct]
         ecl [2682,2684,0,0,alpha]
         " [2685,2685,0,0,punct]
      , [2686,2686,0,0,punct]
   _keyValue [2700,2741,6,16,node, ("key" "match")]
      _key [2700,2707,5,16,node, ("text" "match")]
         " [2700,2700,0,0,punct]
         match [2701,2705,0,0,alpha]
         " [2706,2706,0,0,punct]
         : [2707,2707,0,0,punct]
      _match [2709,2741,7,18,node, ("text" "\\b(?i:(module(?=\\(.*\\))))\\b")]
         _value [2709,2741,5,28,node, ("text" "\\b(?i:(module(?=\\(.*\\))))\\b")]
            " [2709,2709,0,0,punct]
            \\ [2710,2710,0,0,punct]
            \\ [2711,2711,0,0,punct]
            b [2712,2712,0,0,alpha]
            ( [2713,2713,0,0,punct]
            ? [2714,2714,0,0,punct]
            i [2715,2715,0,0,alpha]
            : [2716,2716,0,0,punct]
            ( [2717,2717,0,0,punct]
            module [2718,2723,0,0,alpha]
            ( [2724,2724,0,0,punct]
            ? [2725,2725,0,0,punct]
            = [2726,2726,0,0,punct]
            \\ [2727,2727,0,0,punct]
            \\ [2728,2728,0,0,punct]
            ( [2729,2729,0,0,punct]
            . [2730,2730,0,0,punct]
            * [2731,2731,0,0,punct]
            \\ [2732,2732,0,0,punct]
            \\ [2733,2733,0,0,punct]
            ) [2734,2734,0,0,punct]
            ) [2735,2735,0,0,punct]
            ) [2736,2736,0,0,punct]
            ) [2737,2737,0,0,punct]
            \\ [2738,2738,0,0,punct]
            \\ [2739,2739,0,0,punct]
            b [2740,2740,0,0,alpha]
            " [2741,2741,0,0,punct]
   } [2751,2751,0,0,punct, ("level" 2)]
   , [2752,2752,0,0,punct]
   { [2762,2762,0,0,punct, ("level" 2)]
   _keyValue [2776,2805,6,16,node, ("key" "name")]
      _key [2776,2782,5,16,node, ("text" "name")]
         " [2776,2776,0,0,punct]
         name [2777,2780,0,0,alpha]
         " [2781,2781,0,0,punct]
         : [2782,2782,0,0,punct]
      _value [2784,2804,5,28,node, ("text" "keyword.control.ecl")]
         " [2784,2784,0,0,punct]
         keyword [2785,2791,0,0,alpha]
         . [2792,2792,0,0,punct]
         control [2793,2799,0,0,alpha]
         . [2800,2800,0,0,punct]
         ecl [2801,2803,0,0,alpha]
         " [2804,2804,0,0,punct]
      , [2805,2805,0,0,punct]
   _keyValue [2819,2982,6,16,node, ("key" "match")]
      _key [2819,2826,5,16,node, ("text" "match")]
         " [2819,2819,0,0,punct]
         match [2820,2824,0,0,alpha]
         " [2825,2825,0,0,punct]
         : [2826,2826,0,0,punct]
      _match [2828,2982,7,18,node, ("text" "\\b(?i:(import|as|checkpoint|deprecated|failcode|failmessage|failure|global|independent|onwarning|persist|priority|recovery|stored|success|wait|when))\\b")]
         _value [2828,2982,5,28,node, ("text" "\\b(?i:(import|as|checkpoint|deprecated|failcode|failmessage|failure|global|independent|onwarning|persist|priority|recovery|stored|success|wait|when))\\b")]
            " [2828,2828,0,0,punct]
            \\ [2829,2829,0,0,punct]
            \\ [2830,2830,0,0,punct]
            b [2831,2831,0,0,alpha]
            ( [2832,2832,0,0,punct]
            ? [2833,2833,0,0,punct]
            i [2834,2834,0,0,alpha]
            : [2835,2835,0,0,punct]
            ( [2836,2836,0,0,punct,fired]
            _list [2837,2976,8,14,node,fired,blt]
               import [2837,2842,0,0,alpha,fired]
               | [2843,2843,0,0,punct,fired]
               as [2844,2845,0,0,alpha,fired]
               | [2846,2846,0,0,punct,fired]
               checkpoint [2847,2856,0,0,alpha,fired]
               | [2857,2857,0,0,punct,fired]
               deprecated [2858,2867,0,0,alpha,fired]
               | [2868,2868,0,0,punct,fired]
               failcode [2869,2876,0,0,alpha,fired]
               | [2877,2877,0,0,punct,fired]
               failmessage [2878,2888,0,0,alpha,fired]
               | [2889,2889,0,0,punct,fired]
               failure [2890,2896,0,0,alpha,fired]
               | [2897,2897,0,0,punct,fired]
               global [2898,2903,0,0,alpha,fired]
               | [2904,2904,0,0,punct,fired]
               independent [2905,2915,0,0,alpha,fired]
               | [2916,2916,0,0,punct,fired]
               onwarning [2917,2925,0,0,alpha,fired]
               | [2926,2926,0,0,punct,fired]
               persist [2927,2933,0,0,alpha,fired]
               | [2934,2934,0,0,punct,fired]
               priority [2935,2942,0,0,alpha,fired]
               | [2943,2943,0,0,punct,fired]
               recovery [2944,2951,0,0,alpha,fired]
               | [2952,2952,0,0,punct,fired]
               stored [2953,2958,0,0,alpha,fired]
               | [2959,2959,0,0,punct,fired]
               success [2960,2966,0,0,alpha,fired]
               | [2967,2967,0,0,punct,fired]
               wait [2968,2971,0,0,alpha,fired]
               | [2972,2972,0,0,punct,fired]
               when [2973,2976,0,0,alpha,fired]
            ) [2977,2977,0,0,punct]
            ) [2978,2978,0,0,punct]
            \\ [2979,2979,0,0,punct]
            \\ [2980,2980,0,0,punct]
            b [2981,2981,0,0,alpha]
            " [2982,2982,0,0,punct]
   } [2992,2992,0,0,punct, ("level" 2)]
   , [2993,2993,0,0,punct]
   { [3003,3003,0,0,punct, ("level" 2)]
   _keyValue [3017,3047,6,16,node, ("key" "name")]
      _key [3017,3023,5,16,node, ("text" "name")]
         " [3017,3017,0,0,punct]
         name [3018,3021,0,0,alpha]
         " [3022,3022,0,0,punct]
         : [3023,3023,0,0,punct]
      _value [3025,3046,5,28,node, ("text" "keyword.operator.ecl")]
         " [3025,3025,0,0,punct]
         keyword [3026,3032,0,0,alpha]
         . [3033,3033,0,0,punct]
         operator [3034,3041,0,0,alpha]
         . [3042,3042,0,0,punct]
         ecl [3043,3045,0,0,alpha]
         " [3046,3046,0,0,punct]
      , [3047,3047,0,0,punct]
   _keyValue [3061,3118,6,16,node, ("key" "match")]
      _key [3061,3068,5,16,node, ("text" "match")]
         " [3061,3061,0,0,punct]
         match [3062,3066,0,0,alpha]
         " [3067,3067,0,0,punct]
         : [3068,3068,0,0,punct]
      _match [3070,3118,7,18,node, ("text" "\\b(?i:(:=|and|not|or|in|>|<|<>|/|\\|+|-|=))\\b")]
         _value [3070,3118,5,28,node, ("text" "\\b(?i:(:=|and|not|or|in|>|<|<>|/|\\|+|-|=))\\b")]
            " [3070,3070,0,0,punct]
            \\ [3071,3071,0,0,punct]
            \\ [3072,3072,0,0,punct]
            b [3073,3073,0,0,alpha]
            ( [3074,3074,0,0,punct]
            ? [3075,3075,0,0,punct]
            i [3076,3076,0,0,alpha]
            : [3077,3077,0,0,punct]
            ( [3078,3078,0,0,punct]
            : [3079,3079,0,0,punct]
            = [3080,3080,0,0,punct]
            | [3081,3081,0,0,punct]
            and [3082,3084,0,0,alpha]
            | [3085,3085,0,0,punct]
            not [3086,3088,0,0,alpha]
            | [3089,3089,0,0,punct]
            or [3090,3091,0,0,alpha]
            | [3092,3092,0,0,punct]
            in [3093,3094,0,0,alpha]
            | [3095,3095,0,0,punct]
            > [3096,3096,0,0,punct]
            | [3097,3097,0,0,punct]
            < [3098,3098,0,0,punct]
            | [3099,3099,0,0,punct]
            < [3100,3100,0,0,punct]
            > [3101,3101,0,0,punct]
            | [3102,3102,0,0,punct]
            / [3103,3103,0,0,punct]
            | [3104,3104,0,0,punct]
            \\ [3105,3105,0,0,punct]
            \\ [3106,3106,0,0,punct]
            | [3107,3107,0,0,punct]
            + [3108,3108,0,0,punct]
            | [3109,3109,0,0,punct]
            - [3110,3110,0,0,punct]
            | [3111,3111,0,0,punct]
            = [3112,3112,0,0,punct]
            ) [3113,3113,0,0,punct]
            ) [3114,3114,0,0,punct]
            \\ [3115,3115,0,0,punct]
            \\ [3116,3116,0,0,punct]
            b [3117,3117,0,0,alpha]
            " [3118,3118,0,0,punct]
   } [3128,3128,0,0,punct, ("level" 2)]
   , [3129,3129,0,0,punct]
   { [3139,3139,0,0,punct, ("level" 2)]
   _keyValue [3153,3180,6,16,node, ("key" "name")]
      _key [3153,3159,5,16,node, ("text" "name")]
         " [3153,3153,0,0,punct]
         name [3154,3157,0,0,alpha]
         " [3158,3158,0,0,punct]
         : [3159,3159,0,0,punct]
      _value [3161,3179,5,28,node, ("text" "support.class.ecl")]
         " [3161,3161,0,0,punct]
         support [3162,3168,0,0,alpha]
         . [3169,3169,0,0,punct]
         class [3170,3174,0,0,alpha]
         . [3175,3175,0,0,punct]
         ecl [3176,3178,0,0,alpha]
         " [3179,3179,0,0,punct]
      , [3180,3180,0,0,punct]
   _keyValue [3194,3328,6,16,node, ("key" "match")]
      _key [3194,3201,5,16,node, ("text" "match")]
         " [3194,3194,0,0,punct]
         match [3195,3199,0,0,alpha]
         " [3200,3200,0,0,punct]
         : [3201,3201,0,0,punct]
      _match [3203,3328,7,18,node, ("text" "\\b(?i:(std).(file|date|str|math|metaphone|metaphone3|uni|audit|blas|system.(debug|email|job|log|thorlib|util|workunit)))\\b")]
         _value [3203,3328,5,28,node, ("text" "\\b(?i:(std).(file|date|str|math|metaphone|metaphone3|uni|audit|blas|system.(debug|email|job|log|thorlib|util|workunit)))\\b")]
            " [3203,3203,0,0,punct]
            \\ [3204,3204,0,0,punct]
            \\ [3205,3205,0,0,punct]
            b [3206,3206,0,0,alpha]
            ( [3207,3207,0,0,punct]
            ? [3208,3208,0,0,punct]
            i [3209,3209,0,0,alpha]
            : [3210,3210,0,0,punct]
            ( [3211,3211,0,0,punct]
            std [3212,3214,0,0,alpha]
            ) [3215,3215,0,0,punct]
            . [3216,3216,0,0,punct]
            ( [3217,3217,0,0,punct,fired]
            _list [3218,3278,8,14,node,fired,blt]
               file [3218,3221,0,0,alpha,fired]
               | [3222,3222,0,0,punct,fired]
               date [3223,3226,0,0,alpha,fired]
               | [3227,3227,0,0,punct,fired]
               str [3228,3230,0,0,alpha,fired]
               | [3231,3231,0,0,punct,fired]
               math [3232,3235,0,0,alpha,fired]
               | [3236,3236,0,0,punct,fired]
               metaphone [3237,3245,0,0,alpha,fired]
               | [3246,3246,0,0,punct,fired]
               metaphone [3247,3255,0,0,alpha,fired]
               3 [3256,3256,0,0,num,fired]
               | [3257,3257,0,0,punct,fired]
               uni [3258,3260,0,0,alpha,fired]
               | [3261,3261,0,0,punct,fired]
               audit [3262,3266,0,0,alpha,fired]
               | [3267,3267,0,0,punct,fired]
               blas [3268,3271,0,0,alpha,fired]
               | [3272,3272,0,0,punct,fired]
               system [3273,3278,0,0,alpha,fired]
            . [3279,3279,0,0,punct]
            ( [3280,3280,0,0,punct,fired]
            _list [3281,3321,8,14,node,fired,blt]
               debug [3281,3285,0,0,alpha,fired]
               | [3286,3286,0,0,punct,fired]
               email [3287,3291,0,0,alpha,fired]
               | [3292,3292,0,0,punct,fired]
               job [3293,3295,0,0,alpha,fired]
               | [3296,3296,0,0,punct,fired]
               log [3297,3299,0,0,alpha,fired]
               | [3300,3300,0,0,punct,fired]
               thorlib [3301,3307,0,0,alpha,fired]
               | [3308,3308,0,0,punct,fired]
               util [3309,3312,0,0,alpha,fired]
               | [3313,3313,0,0,punct,fired]
               workunit [3314,3321,0,0,alpha,fired]
            ) [3322,3322,0,0,punct]
            ) [3323,3323,0,0,punct]
            ) [3324,3324,0,0,punct]
            \\ [3325,3325,0,0,punct]
            \\ [3326,3326,0,0,punct]
            b [3327,3327,0,0,alpha]
            " [3328,3328,0,0,punct]
   } [3338,3338,0,0,punct, ("level" 2)]
   , [3339,3339,0,0,punct]
   { [3349,3349,0,0,punct, ("level" 2)]
   _keyValue [3363,3397,6,16,node, ("key" "name")]
      _key [3363,3369,5,16,node, ("text" "name")]
         " [3363,3363,0,0,punct]
         name [3364,3367,0,0,alpha]
         " [3368,3368,0,0,punct]
         : [3369,3369,0,0,punct]
      _value [3371,3396,5,28,node, ("text" "entity.name.function.ecl")]
         " [3371,3371,0,0,punct]
         entity [3372,3377,0,0,alpha]
         . [3378,3378,0,0,punct]
         name [3379,3382,0,0,alpha]
         . [3383,3383,0,0,punct]
         function [3384,3391,0,0,alpha]
         . [3392,3392,0,0,punct]
         ecl [3393,3395,0,0,alpha]
         " [3396,3396,0,0,punct]
      , [3397,3397,0,0,punct]
   _keyValue [3411,3443,6,16,node, ("key" "match")]
      _key [3411,3418,5,16,node, ("text" "match")]
         " [3411,3411,0,0,punct]
         match [3412,3416,0,0,alpha]
         " [3417,3417,0,0,punct]
         : [3418,3418,0,0,punct]
      _match [3420,3442,7,18,node, ("text" "([A-Za-z_]+)\\s*(\\()")]
         _value [3420,3442,5,28,node, ("text" "([A-Za-z_]+)\\s*(\\()")]
            " [3420,3420,0,0,punct]
            ( [3421,3421,0,0,punct]
            [ [3422,3422,0,0,punct, ("level" 3)]
            A [3423,3423,0,0,alpha]
            - [3424,3424,0,0,punct]
            Za [3425,3426,0,0,alpha]
            - [3427,3427,0,0,punct]
            z [3428,3428,0,0,alpha]
            _ [3429,3429,0,0,punct]
            ] [3430,3430,0,0,punct, ("level" 3)]
            + [3431,3431,0,0,punct]
            ) [3432,3432,0,0,punct]
            \\ [3433,3433,0,0,punct]
            \\ [3434,3434,0,0,punct]
            s [3435,3435,0,0,alpha]
            * [3436,3436,0,0,punct]
            ( [3437,3437,0,0,punct]
            \\ [3438,3438,0,0,punct]
            \\ [3439,3439,0,0,punct]
            ( [3440,3440,0,0,punct]
            ) [3441,3441,0,0,punct]
            " [3442,3442,0,0,punct]
      , [3443,3443,0,0,punct]
   _key [3457,3467,5,16,node, ("text" "captures")]
      " [3457,3457,0,0,punct]
      captures [3458,3465,0,0,alpha]
      " [3466,3466,0,0,punct]
      : [3467,3467,0,0,punct]
   { [3469,3469,0,0,punct, ("level" 3)]
   _key [3487,3490,5,16,node, ("text" "1")]
      " [3487,3487,0,0,punct]
      1 [3488,3488,0,0,num]
      " [3489,3489,0,0,punct]
      : [3490,3490,0,0,punct]
   { [3492,3492,0,0,punct, ("level" 4)]
   _key [3514,3524,5,16,node, ("text" "patterns")]
      " [3514,3514,0,0,punct]
      patterns [3515,3522,0,0,alpha]
      " [3523,3523,0,0,punct]
      : [3524,3524,0,0,punct]
   [ [3526,3526,0,0,punct, ("level" 5)]
   { [3552,3552,0,0,punct, ("level" 6)]
   _keyValue [3582,3604,6,16,node, ("key" "include")]
      _key [3582,3591,5,16,node, ("text" "include")]
         " [3582,3582,0,0,punct]
         include [3583,3589,0,0,alpha]
         " [3590,3590,0,0,punct]
         : [3591,3591,0,0,punct]
      _value [3593,3604,5,28,node, ("text" "#functions")]
         " [3593,3593,0,0,punct]
         # [3594,3594,0,0,punct]
         functions [3595,3603,0,0,alpha]
         " [3604,3604,0,0,punct]
   } [3630,3630,0,0,punct, ("level" 6)]
   , [3631,3631,0,0,punct]
   { [3657,3657,0,0,punct, ("level" 6)]
   _keyValue [3687,3710,6,16,node, ("key" "include")]
      _key [3687,3696,5,16,node, ("text" "include")]
         " [3687,3687,0,0,punct]
         include [3688,3694,0,0,alpha]
         " [3695,3695,0,0,punct]
         : [3696,3696,0,0,punct]
      _value [3698,3710,5,28,node, ("text" "#functions2")]
         " [3698,3698,0,0,punct]
         # [3699,3699,0,0,punct]
         functions [3700,3708,0,0,alpha]
         2 [3709,3709,0,0,num]
         " [3710,3710,0,0,punct]
   } [3736,3736,0,0,punct, ("level" 6)]
   ] [3758,3758,0,0,punct, ("level" 5)]
   } [3776,3776,0,0,punct, ("level" 4)]
   } [3790,3790,0,0,punct, ("level" 3)]
   } [3800,3800,0,0,punct, ("level" 2)]
   ] [3806,3806,0,0,punct, ("level" 1)]
   , [3807,3807,0,0,punct]
   _key [3813,3825,5,16,node, ("text" "repository")]
      " [3813,3813,0,0,punct]
      repository [3814,3823,0,0,alpha]
      " [3824,3824,0,0,punct]
      : [3825,3825,0,0,punct]
   { [3827,3827,0,0,punct, ("level" 1)]
   _key [3837,3848,5,16,node, ("text" "functions")]
      " [3837,3837,0,0,punct]
      functions [3838,3846,0,0,alpha]
      " [3847,3847,0,0,punct]
      : [3848,3848,0,0,punct]
   { [3850,3850,0,0,punct, ("level" 2)]
   _keyValue [3864,3898,6,16,node, ("key" "name")]
      _key [3864,3870,5,16,node, ("text" "name")]
         " [3864,3864,0,0,punct]
         name [3865,3868,0,0,alpha]
         " [3869,3869,0,0,punct]
         : [3870,3870,0,0,punct]
      _value [3872,3897,5,28,node, ("text" "entity.name.function.ecl")]
         " [3872,3872,0,0,punct]
         entity [3873,3878,0,0,alpha]
         . [3879,3879,0,0,punct]
         name [3880,3883,0,0,alpha]
         . [3884,3884,0,0,punct]
         function [3885,3892,0,0,alpha]
         . [3893,3893,0,0,punct]
         ecl [3894,3896,0,0,alpha]
         " [3897,3897,0,0,punct]
      , [3898,3898,0,0,punct]
   _keyValue [3912,5012,6,16,node, ("key" "match")]
      _key [3912,3919,5,16,node, ("text" "match")]
         " [3912,3912,0,0,punct]
         match [3913,3917,0,0,alpha]
         " [3918,3918,0,0,punct]
         : [3919,3919,0,0,punct]
      _match [3921,5012,7,18,node, ("text" "\\b(?i:(abs|acos|aggregate|allnodes|apply|ascii|asin|asstring|atan|atan2|ave|case|catch|choose|choosen|choosesets|clustersize|combine|correlation|cos|cosh|count|covariance|cron|dataset|dedup|define|denormalize|dictionary|distribute|distributed|distribution|ebcdic|enth|error|evaluate|event|eventextra|eventname|exists|exp|failcode|failmessage|fetch|fromunicode|fromxml|getenv|getisvalid|global|graph|group|hash|hash32|hash64|hashcrc|hashmd5|having|httpcall|httpheader|if|iff|index|intformat|isvalid|iterate|join|keyunicode|length|library|limit|ln|local|log|loop|map|matched|matchlength|matchposition|matchtext|matchunicode|max|merge|mergejoin|min|nofold|nolocal|nonempty|normalize|parse|pipe|power|preload|process|project|pull|random|range|rank|ranked|realformat|recordof|regexfind|regexreplace|regroup|rejected|rollup|round|roundup|row|rowdiff|sample|set|sin|sinh|sizeof|soapcall|sort|sorted|sqrt|stepped|stored|sum|table|tan|tanh|thisnode|topn|tounicode|toxml|transfer|transform|trim|truncate|typeof|ungroup|unicodeorder|variance|which|workunit|xmldecode|xmlencode|xmltext|xmlunicode))\\b")]
         _value [3921,5012,5,28,node, ("text" "\\b(?i:(abs|acos|aggregate|allnodes|apply|ascii|asin|asstring|atan|atan2|ave|case|catch|choose|choosen|choosesets|clustersize|combine|correlation|cos|cosh|count|covariance|cron|dataset|dedup|define|denormalize|dictionary|distribute|distributed|distribution|ebcdic|enth|error|evaluate|event|eventextra|eventname|exists|exp|failcode|failmessage|fetch|fromunicode|fromxml|getenv|getisvalid|global|graph|group|hash|hash32|hash64|hashcrc|hashmd5|having|httpcall|httpheader|if|iff|index|intformat|isvalid|iterate|join|keyunicode|length|library|limit|ln|local|log|loop|map|matched|matchlength|matchposition|matchtext|matchunicode|max|merge|mergejoin|min|nofold|nolocal|nonempty|normalize|parse|pipe|power|preload|process|project|pull|random|range|rank|ranked|realformat|recordof|regexfind|regexreplace|regroup|rejected|rollup|round|roundup|row|rowdiff|sample|set|sin|sinh|sizeof|soapcall|sort|sorted|sqrt|stepped|stored|sum|table|tan|tanh|thisnode|topn|tounicode|toxml|transfer|transform|trim|truncate|typeof|ungroup|unicodeorder|variance|which|workunit|xmldecode|xmlencode|xmltext|xmlunicode))\\b")]
            " [3921,3921,0,0,punct]
            \\ [3922,3922,0,0,punct]
            \\ [3923,3923,0,0,punct]
            b [3924,3924,0,0,alpha]
            ( [3925,3925,0,0,punct]
            ? [3926,3926,0,0,punct]
            i [3927,3927,0,0,alpha]
            : [3928,3928,0,0,punct]
            ( [3929,3929,0,0,punct,fired]
            _list [3930,5006,8,14,node,fired,blt]
               abs [3930,3932,0,0,alpha,fired]
               | [3933,3933,0,0,punct,fired]
               acos [3934,3937,0,0,alpha,fired]
               | [3938,3938,0,0,punct,fired]
               aggregate [3939,3947,0,0,alpha,fired]
               | [3948,3948,0,0,punct,fired]
               allnodes [3949,3956,0,0,alpha,fired]
               | [3957,3957,0,0,punct,fired]
               apply [3958,3962,0,0,alpha,fired]
               | [3963,3963,0,0,punct,fired]
               ascii [3964,3968,0,0,alpha,fired]
               | [3969,3969,0,0,punct,fired]
               asin [3970,3973,0,0,alpha,fired]
               | [3974,3974,0,0,punct,fired]
               asstring [3975,3982,0,0,alpha,fired]
               | [3983,3983,0,0,punct,fired]
               atan [3984,3987,0,0,alpha,fired]
               | [3988,3988,0,0,punct,fired]
               atan [3989,3992,0,0,alpha,fired]
               2 [3993,3993,0,0,num,fired]
               | [3994,3994,0,0,punct,fired]
               ave [3995,3997,0,0,alpha,fired]
               | [3998,3998,0,0,punct,fired]
               case [3999,4002,0,0,alpha,fired]
               | [4003,4003,0,0,punct,fired]
               catch [4004,4008,0,0,alpha,fired]
               | [4009,4009,0,0,punct,fired]
               choose [4010,4015,0,0,alpha,fired]
               | [4016,4016,0,0,punct,fired]
               choosen [4017,4023,0,0,alpha,fired]
               | [4024,4024,0,0,punct,fired]
               choosesets [4025,4034,0,0,alpha,fired]
               | [4035,4035,0,0,punct,fired]
               clustersize [4036,4046,0,0,alpha,fired]
               | [4047,4047,0,0,punct,fired]
               combine [4048,4054,0,0,alpha,fired]
               | [4055,4055,0,0,punct,fired]
               correlation [4056,4066,0,0,alpha,fired]
               | [4067,4067,0,0,punct,fired]
               cos [4068,4070,0,0,alpha,fired]
               | [4071,4071,0,0,punct,fired]
               cosh [4072,4075,0,0,alpha,fired]
               | [4076,4076,0,0,punct,fired]
               count [4077,4081,0,0,alpha,fired]
               | [4082,4082,0,0,punct,fired]
               covariance [4083,4092,0,0,alpha,fired]
               | [4093,4093,0,0,punct,fired]
               cron [4094,4097,0,0,alpha,fired]
               | [4098,4098,0,0,punct,fired]
               dataset [4099,4105,0,0,alpha,fired]
               | [4106,4106,0,0,punct,fired]
               dedup [4107,4111,0,0,alpha,fired]
               | [4112,4112,0,0,punct,fired]
               define [4113,4118,0,0,alpha,fired]
               | [4119,4119,0,0,punct,fired]
               denormalize [4120,4130,0,0,alpha,fired]
               | [4131,4131,0,0,punct,fired]
               dictionary [4132,4141,0,0,alpha,fired]
               | [4142,4142,0,0,punct,fired]
               distribute [4143,4152,0,0,alpha,fired]
               | [4153,4153,0,0,punct,fired]
               distributed [4154,4164,0,0,alpha,fired]
               | [4165,4165,0,0,punct,fired]
               distribution [4166,4177,0,0,alpha,fired]
               | [4178,4178,0,0,punct,fired]
               ebcdic [4179,4184,0,0,alpha,fired]
               | [4185,4185,0,0,punct,fired]
               enth [4186,4189,0,0,alpha,fired]
               | [4190,4190,0,0,punct,fired]
               error [4191,4195,0,0,alpha,fired]
               | [4196,4196,0,0,punct,fired]
               evaluate [4197,4204,0,0,alpha,fired]
               | [4205,4205,0,0,punct,fired]
               event [4206,4210,0,0,alpha,fired]
               | [4211,4211,0,0,punct,fired]
               eventextra [4212,4221,0,0,alpha,fired]
               | [4222,4222,0,0,punct,fired]
               eventname [4223,4231,0,0,alpha,fired]
               | [4232,4232,0,0,punct,fired]
               exists [4233,4238,0,0,alpha,fired]
               | [4239,4239,0,0,punct,fired]
               exp [4240,4242,0,0,alpha,fired]
               | [4243,4243,0,0,punct,fired]
               failcode [4244,4251,0,0,alpha,fired]
               | [4252,4252,0,0,punct,fired]
               failmessage [4253,4263,0,0,alpha,fired]
               | [4264,4264,0,0,punct,fired]
               fetch [4265,4269,0,0,alpha,fired]
               | [4270,4270,0,0,punct,fired]
               fromunicode [4271,4281,0,0,alpha,fired]
               | [4282,4282,0,0,punct,fired]
               fromxml [4283,4289,0,0,alpha,fired]
               | [4290,4290,0,0,punct,fired]
               getenv [4291,4296,0,0,alpha,fired]
               | [4297,4297,0,0,punct,fired]
               getisvalid [4298,4307,0,0,alpha,fired]
               | [4308,4308,0,0,punct,fired]
               global [4309,4314,0,0,alpha,fired]
               | [4315,4315,0,0,punct,fired]
               graph [4316,4320,0,0,alpha,fired]
               | [4321,4321,0,0,punct,fired]
               group [4322,4326,0,0,alpha,fired]
               | [4327,4327,0,0,punct,fired]
               hash [4328,4331,0,0,alpha,fired]
               | [4332,4332,0,0,punct,fired]
               hash [4333,4336,0,0,alpha,fired]
               32 [4337,4338,0,0,num,fired]
               | [4339,4339,0,0,punct,fired]
               hash [4340,4343,0,0,alpha,fired]
               64 [4344,4345,0,0,num,fired]
               | [4346,4346,0,0,punct,fired]
               hashcrc [4347,4353,0,0,alpha,fired]
               | [4354,4354,0,0,punct,fired]
               hashmd [4355,4360,0,0,alpha,fired]
               5 [4361,4361,0,0,num,fired]
               | [4362,4362,0,0,punct,fired]
               having [4363,4368,0,0,alpha,fired]
               | [4369,4369,0,0,punct,fired]
               httpcall [4370,4377,0,0,alpha,fired]
               | [4378,4378,0,0,punct,fired]
               httpheader [4379,4388,0,0,alpha,fired]
               | [4389,4389,0,0,punct,fired]
               if [4390,4391,0,0,alpha,fired]
               | [4392,4392,0,0,punct,fired]
               iff [4393,4395,0,0,alpha,fired]
               | [4396,4396,0,0,punct,fired]
               index [4397,4401,0,0,alpha,fired]
               | [4402,4402,0,0,punct,fired]
               intformat [4403,4411,0,0,alpha,fired]
               | [4412,4412,0,0,punct,fired]
               isvalid [4413,4419,0,0,alpha,fired]
               | [4420,4420,0,0,punct,fired]
               iterate [4421,4427,0,0,alpha,fired]
               | [4428,4428,0,0,punct,fired]
               join [4429,4432,0,0,alpha,fired]
               | [4433,4433,0,0,punct,fired]
               keyunicode [4434,4443,0,0,alpha,fired]
               | [4444,4444,0,0,punct,fired]
               length [4445,4450,0,0,alpha,fired]
               | [4451,4451,0,0,punct,fired]
               library [4452,4458,0,0,alpha,fired]
               | [4459,4459,0,0,punct,fired]
               limit [4460,4464,0,0,alpha,fired]
               | [4465,4465,0,0,punct,fired]
               ln [4466,4467,0,0,alpha,fired]
               | [4468,4468,0,0,punct,fired]
               local [4469,4473,0,0,alpha,fired]
               | [4474,4474,0,0,punct,fired]
               log [4475,4477,0,0,alpha,fired]
               | [4478,4478,0,0,punct,fired]
               loop [4479,4482,0,0,alpha,fired]
               | [4483,4483,0,0,punct,fired]
               map [4484,4486,0,0,alpha,fired]
               | [4487,4487,0,0,punct,fired]
               matched [4488,4494,0,0,alpha,fired]
               | [4495,4495,0,0,punct,fired]
               matchlength [4496,4506,0,0,alpha,fired]
               | [4507,4507,0,0,punct,fired]
               matchposition [4508,4520,0,0,alpha,fired]
               | [4521,4521,0,0,punct,fired]
               matchtext [4522,4530,0,0,alpha,fired]
               | [4531,4531,0,0,punct,fired]
               matchunicode [4532,4543,0,0,alpha,fired]
               | [4544,4544,0,0,punct,fired]
               max [4545,4547,0,0,alpha,fired]
               | [4548,4548,0,0,punct,fired]
               merge [4549,4553,0,0,alpha,fired]
               | [4554,4554,0,0,punct,fired]
               mergejoin [4555,4563,0,0,alpha,fired]
               | [4564,4564,0,0,punct,fired]
               min [4565,4567,0,0,alpha,fired]
               | [4568,4568,0,0,punct,fired]
               nofold [4569,4574,0,0,alpha,fired]
               | [4575,4575,0,0,punct,fired]
               nolocal [4576,4582,0,0,alpha,fired]
               | [4583,4583,0,0,punct,fired]
               nonempty [4584,4591,0,0,alpha,fired]
               | [4592,4592,0,0,punct,fired]
               normalize [4593,4601,0,0,alpha,fired]
               | [4602,4602,0,0,punct,fired]
               parse [4603,4607,0,0,alpha,fired]
               | [4608,4608,0,0,punct,fired]
               pipe [4609,4612,0,0,alpha,fired]
               | [4613,4613,0,0,punct,fired]
               power [4614,4618,0,0,alpha,fired]
               | [4619,4619,0,0,punct,fired]
               preload [4620,4626,0,0,alpha,fired]
               | [4627,4627,0,0,punct,fired]
               process [4628,4634,0,0,alpha,fired]
               | [4635,4635,0,0,punct,fired]
               project [4636,4642,0,0,alpha,fired]
               | [4643,4643,0,0,punct,fired]
               pull [4644,4647,0,0,alpha,fired]
               | [4648,4648,0,0,punct,fired]
               random [4649,4654,0,0,alpha,fired]
               | [4655,4655,0,0,punct,fired]
               range [4656,4660,0,0,alpha,fired]
               | [4661,4661,0,0,punct,fired]
               rank [4662,4665,0,0,alpha,fired]
               | [4666,4666,0,0,punct,fired]
               ranked [4667,4672,0,0,alpha,fired]
               | [4673,4673,0,0,punct,fired]
               realformat [4674,4683,0,0,alpha,fired]
               | [4684,4684,0,0,punct,fired]
               recordof [4685,4692,0,0,alpha,fired]
               | [4693,4693,0,0,punct,fired]
               regexfind [4694,4702,0,0,alpha,fired]
               | [4703,4703,0,0,punct,fired]
               regexreplace [4704,4715,0,0,alpha,fired]
               | [4716,4716,0,0,punct,fired]
               regroup [4717,4723,0,0,alpha,fired]
               | [4724,4724,0,0,punct,fired]
               rejected [4725,4732,0,0,alpha,fired]
               | [4733,4733,0,0,punct,fired]
               rollup [4734,4739,0,0,alpha,fired]
               | [4740,4740,0,0,punct,fired]
               round [4741,4745,0,0,alpha,fired]
               | [4746,4746,0,0,punct,fired]
               roundup [4747,4753,0,0,alpha,fired]
               | [4754,4754,0,0,punct,fired]
               row [4755,4757,0,0,alpha,fired]
               | [4758,4758,0,0,punct,fired]
               rowdiff [4759,4765,0,0,alpha,fired]
               | [4766,4766,0,0,punct,fired]
               sample [4767,4772,0,0,alpha,fired]
               | [4773,4773,0,0,punct,fired]
               set [4774,4776,0,0,alpha,fired]
               | [4777,4777,0,0,punct,fired]
               sin [4778,4780,0,0,alpha,fired]
               | [4781,4781,0,0,punct,fired]
               sinh [4782,4785,0,0,alpha,fired]
               | [4786,4786,0,0,punct,fired]
               sizeof [4787,4792,0,0,alpha,fired]
               | [4793,4793,0,0,punct,fired]
               soapcall [4794,4801,0,0,alpha,fired]
               | [4802,4802,0,0,punct,fired]
               sort [4803,4806,0,0,alpha,fired]
               | [4807,4807,0,0,punct,fired]
               sorted [4808,4813,0,0,alpha,fired]
               | [4814,4814,0,0,punct,fired]
               sqrt [4815,4818,0,0,alpha,fired]
               | [4819,4819,0,0,punct,fired]
               stepped [4820,4826,0,0,alpha,fired]
               | [4827,4827,0,0,punct,fired]
               stored [4828,4833,0,0,alpha,fired]
               | [4834,4834,0,0,punct,fired]
               sum [4835,4837,0,0,alpha,fired]
               | [4838,4838,0,0,punct,fired]
               table [4839,4843,0,0,alpha,fired]
               | [4844,4844,0,0,punct,fired]
               tan [4845,4847,0,0,alpha,fired]
               | [4848,4848,0,0,punct,fired]
               tanh [4849,4852,0,0,alpha,fired]
               | [4853,4853,0,0,punct,fired]
               thisnode [4854,4861,0,0,alpha,fired]
               | [4862,4862,0,0,punct,fired]
               topn [4863,4866,0,0,alpha,fired]
               | [4867,4867,0,0,punct,fired]
               tounicode [4868,4876,0,0,alpha,fired]
               | [4877,4877,0,0,punct,fired]
               toxml [4878,4882,0,0,alpha,fired]
               | [4883,4883,0,0,punct,fired]
               transfer [4884,4891,0,0,alpha,fired]
               | [4892,4892,0,0,punct,fired]
               transform [4893,4901,0,0,alpha,fired]
               | [4902,4902,0,0,punct,fired]
               trim [4903,4906,0,0,alpha,fired]
               | [4907,4907,0,0,punct,fired]
               truncate [4908,4915,0,0,alpha,fired]
               | [4916,4916,0,0,punct,fired]
               typeof [4917,4922,0,0,alpha,fired]
               | [4923,4923,0,0,punct,fired]
               ungroup [4924,4930,0,0,alpha,fired]
               | [4931,4931,0,0,punct,fired]
               unicodeorder [4932,4943,0,0,alpha,fired]
               | [4944,4944,0,0,punct,fired]
               variance [4945,4952,0,0,alpha,fired]
               | [4953,4953,0,0,punct,fired]
               which [4954,4958,0,0,alpha,fired]
               | [4959,4959,0,0,punct,fired]
               workunit [4960,4967,0,0,alpha,fired]
               | [4968,4968,0,0,punct,fired]
               xmldecode [4969,4977,0,0,alpha,fired]
               | [4978,4978,0,0,punct,fired]
               xmlencode [4979,4987,0,0,alpha,fired]
               | [4988,4988,0,0,punct,fired]
               xmltext [4989,4995,0,0,alpha,fired]
               | [4996,4996,0,0,punct,fired]
               xmlunicode [4997,5006,0,0,alpha,fired]
            ) [5007,5007,0,0,punct]
            ) [5008,5008,0,0,punct]
            \\ [5009,5009,0,0,punct]
            \\ [5010,5010,0,0,punct]
            b [5011,5011,0,0,alpha]
            " [5012,5012,0,0,punct]
   } [5022,5022,0,0,punct, ("level" 2)]
   , [5023,5023,0,0,punct]
   _key [5033,5045,5,16,node, ("text" "functions2")]
      " [5033,5033,0,0,punct]
      functions [5034,5042,0,0,alpha]
      2 [5043,5043,0,0,num]
      " [5044,5044,0,0,punct]
      : [5045,5045,0,0,punct]
   { [5047,5047,0,0,punct, ("level" 2)]
   _keyValue [5061,5095,6,16,node, ("key" "name")]
      _key [5061,5067,5,16,node, ("text" "name")]
         " [5061,5061,0,0,punct]
         name [5062,5065,0,0,alpha]
         " [5066,5066,0,0,punct]
         : [5067,5067,0,0,punct]
      _value [5069,5094,5,28,node, ("text" "entity.name.function.ecl")]
         " [5069,5069,0,0,punct]
         entity [5070,5075,0,0,alpha]
         . [5076,5076,0,0,punct]
         name [5077,5080,0,0,alpha]
         . [5081,5081,0,0,punct]
         function [5082,5089,0,0,alpha]
         . [5090,5090,0,0,punct]
         ecl [5091,5093,0,0,alpha]
         " [5094,5094,0,0,punct]
      , [5095,5095,0,0,punct]
   _keyValue [5109,5255,6,16,node, ("key" "match")]
      _key [5109,5116,5,16,node, ("text" "match")]
         " [5109,5109,0,0,punct]
         match [5110,5114,0,0,alpha]
         " [5115,5115,0,0,punct]
         : [5116,5116,0,0,punct]
      _match [5118,5255,7,18,node, ("text" "\\b(?i:(apply|assert|build|buildindex|evaluate|fail|keydiff|keypatch|loadxml|nothor|notify|output|parallel|sequential|soapcall|wait))\\b")]
         _value [5118,5255,5,28,node, ("text" "\\b(?i:(apply|assert|build|buildindex|evaluate|fail|keydiff|keypatch|loadxml|nothor|notify|output|parallel|sequential|soapcall|wait))\\b")]
            " [5118,5118,0,0,punct]
            \\ [5119,5119,0,0,punct]
            \\ [5120,5120,0,0,punct]
            b [5121,5121,0,0,alpha]
            ( [5122,5122,0,0,punct]
            ? [5123,5123,0,0,punct]
            i [5124,5124,0,0,alpha]
            : [5125,5125,0,0,punct]
            ( [5126,5126,0,0,punct,fired]
            _list [5127,5249,8,14,node,fired,blt]
               apply [5127,5131,0,0,alpha,fired]
               | [5132,5132,0,0,punct,fired]
               assert [5133,5138,0,0,alpha,fired]
               | [5139,5139,0,0,punct,fired]
               build [5140,5144,0,0,alpha,fired]
               | [5145,5145,0,0,punct,fired]
               buildindex [5146,5155,0,0,alpha,fired]
               | [5156,5156,0,0,punct,fired]
               evaluate [5157,5164,0,0,alpha,fired]
               | [5165,5165,0,0,punct,fired]
               fail [5166,5169,0,0,alpha,fired]
               | [5170,5170,0,0,punct,fired]
               keydiff [5171,5177,0,0,alpha,fired]
               | [5178,5178,0,0,punct,fired]
               keypatch [5179,5186,0,0,alpha,fired]
               | [5187,5187,0,0,punct,fired]
               loadxml [5188,5194,0,0,alpha,fired]
               | [5195,5195,0,0,punct,fired]
               nothor [5196,5201,0,0,alpha,fired]
               | [5202,5202,0,0,punct,fired]
               notify [5203,5208,0,0,alpha,fired]
               | [5209,5209,0,0,punct,fired]
               output [5210,5215,0,0,alpha,fired]
               | [5216,5216,0,0,punct,fired]
               parallel [5217,5224,0,0,alpha,fired]
               | [5225,5225,0,0,punct,fired]
               sequential [5226,5235,0,0,alpha,fired]
               | [5236,5236,0,0,punct,fired]
               soapcall [5237,5244,0,0,alpha,fired]
               | [5245,5245,0,0,punct,fired]
               wait [5246,5249,0,0,alpha,fired]
            ) [5250,5250,0,0,punct]
            ) [5251,5251,0,0,punct]
            \\ [5252,5252,0,0,punct]
            \\ [5253,5253,0,0,punct]
            b [5254,5254,0,0,alpha]
            " [5255,5255,0,0,punct]
   } [5265,5265,0,0,punct, ("level" 2)]
   , [5266,5266,0,0,punct]
   _key [5276,5288,5,16,node, ("text" "expression")]
      " [5276,5276,0,0,punct]
      expression [5277,5286,0,0,alpha]
      " [5287,5287,0,0,punct]
      : [5288,5288,0,0,punct]
   { [5290,5290,0,0,punct, ("level" 2)]
   _keyValue [5304,5333,6,16,node, ("key" "name")]
      _key [5304,5310,5,16,node, ("text" "name")]
         " [5304,5304,0,0,punct]
         name [5305,5308,0,0,alpha]
         " [5309,5309,0,0,punct]
         : [5310,5310,0,0,punct]
      _value [5312,5332,5,28,node, ("text" "meta.expression.ecl")]
         " [5312,5312,0,0,punct]
         meta [5313,5316,0,0,alpha]
         . [5317,5317,0,0,punct]
         expression [5318,5327,0,0,alpha]
         . [5328,5328,0,0,punct]
         ecl [5329,5331,0,0,alpha]
         " [5332,5332,0,0,punct]
      , [5333,5333,0,0,punct]
   _key [5347,5357,5,16,node, ("text" "patterns")]
      " [5347,5347,0,0,punct]
      patterns [5348,5355,0,0,alpha]
      " [5356,5356,0,0,punct]
      : [5357,5357,0,0,punct]
   [ [5359,5359,0,0,punct, ("level" 3)]
   { [5377,5377,0,0,punct, ("level" 4)]
   _keyValue [5399,5419,6,16,node, ("key" "include")]
      _key [5399,5408,5,16,node, ("text" "include")]
         " [5399,5399,0,0,punct]
         include [5400,5406,0,0,alpha]
         " [5407,5407,0,0,punct]
         : [5408,5408,0,0,punct]
      _value [5410,5419,5,28,node, ("text" "#comment")]
         " [5410,5410,0,0,punct]
         # [5411,5411,0,0,punct]
         comment [5412,5418,0,0,alpha]
         " [5419,5419,0,0,punct]
   } [5437,5437,0,0,punct, ("level" 4)]
   , [5438,5438,0,0,punct]
   { [5456,5456,0,0,punct, ("level" 4)]
   _keyValue [5478,5497,6,16,node, ("key" "include")]
      _key [5478,5487,5,16,node, ("text" "include")]
         " [5478,5478,0,0,punct]
         include [5479,5485,0,0,alpha]
         " [5486,5486,0,0,punct]
         : [5487,5487,0,0,punct]
      _value [5489,5497,5,28,node, ("text" "#string")]
         " [5489,5489,0,0,punct]
         # [5490,5490,0,0,punct]
         string [5491,5496,0,0,alpha]
         " [5497,5497,0,0,punct]
   } [5515,5515,0,0,punct, ("level" 4)]
   , [5516,5516,0,0,punct]
   { [5534,5534,0,0,punct, ("level" 4)]
   _keyValue [5556,5576,6,16,node, ("key" "include")]
      _key [5556,5565,5,16,node, ("text" "include")]
         " [5556,5556,0,0,punct]
         include [5557,5563,0,0,alpha]
         " [5564,5564,0,0,punct]
         : [5565,5565,0,0,punct]
      _value [5567,5576,5,28,node, ("text" "#literal")]
         " [5567,5567,0,0,punct]
         # [5568,5568,0,0,punct]
         literal [5569,5575,0,0,alpha]
         " [5576,5576,0,0,punct]
   } [5594,5594,0,0,punct, ("level" 4)]
   ] [5608,5608,0,0,punct, ("level" 3)]
   } [5618,5618,0,0,punct, ("level" 2)]
   , [5619,5619,0,0,punct]
   _key [5629,5638,5,16,node, ("text" "comment")]
      " [5629,5629,0,0,punct]
      comment [5630,5636,0,0,alpha]
      " [5637,5637,0,0,punct]
      : [5638,5638,0,0,punct]
   { [5640,5640,0,0,punct, ("level" 2)]
   _keyValue [5654,5675,6,16,node, ("key" "name")]
      _key [5654,5660,5,16,node, ("text" "name")]
         " [5654,5654,0,0,punct]
         name [5655,5658,0,0,alpha]
         " [5659,5659,0,0,punct]
         : [5660,5660,0,0,punct]
      _value [5662,5674,5,28,node, ("text" "comment.ecl")]
         " [5662,5662,0,0,punct]
         comment [5663,5669,0,0,alpha]
         . [5670,5670,0,0,punct]
         ecl [5671,5673,0,0,alpha]
         " [5674,5674,0,0,punct]
      , [5675,5675,0,0,punct]
   _key [5689,5699,5,16,node, ("text" "patterns")]
      " [5689,5689,0,0,punct]
      patterns [5690,5697,0,0,alpha]
      " [5698,5698,0,0,punct]
      : [5699,5699,0,0,punct]
   [ [5701,5701,0,0,punct, ("level" 3)]
   { [5719,5719,0,0,punct, ("level" 4)]
   _keyValue [5741,5771,6,16,node, ("key" "include")]
      _key [5741,5750,5,16,node, ("text" "include")]
         " [5741,5741,0,0,punct]
         include [5742,5748,0,0,alpha]
         " [5749,5749,0,0,punct]
         : [5750,5750,0,0,punct]
      _value [5752,5771,5,28,node, ("text" "#comment-block-doc")]
         " [5752,5752,0,0,punct]
         # [5753,5753,0,0,punct]
         comment [5754,5760,0,0,alpha]
         - [5761,5761,0,0,punct]
         block [5762,5766,0,0,alpha]
         - [5767,5767,0,0,punct]
         doc [5768,5770,0,0,alpha]
         " [5771,5771,0,0,punct]
   } [5789,5789,0,0,punct, ("level" 4)]
   , [5790,5790,0,0,punct]
   { [5808,5808,0,0,punct, ("level" 4)]
   _keyValue [5830,5856,6,16,node, ("key" "include")]
      _key [5830,5839,5,16,node, ("text" "include")]
         " [5830,5830,0,0,punct]
         include [5831,5837,0,0,alpha]
         " [5838,5838,0,0,punct]
         : [5839,5839,0,0,punct]
      _value [5841,5856,5,28,node, ("text" "#comment-block")]
         " [5841,5841,0,0,punct]
         # [5842,5842,0,0,punct]
         comment [5843,5849,0,0,alpha]
         - [5850,5850,0,0,punct]
         block [5851,5855,0,0,alpha]
         " [5856,5856,0,0,punct]
   } [5874,5874,0,0,punct, ("level" 4)]
   , [5875,5875,0,0,punct]
   { [5893,5893,0,0,punct, ("level" 4)]
   _keyValue [5915,5940,6,16,node, ("key" "include")]
      _key [5915,5924,5,16,node, ("text" "include")]
         " [5915,5915,0,0,punct]
         include [5916,5922,0,0,alpha]
         " [5923,5923,0,0,punct]
         : [5924,5924,0,0,punct]
      _value [5926,5940,5,28,node, ("text" "#comment-line")]
         " [5926,5926,0,0,punct]
         # [5927,5927,0,0,punct]
         comment [5928,5934,0,0,alpha]
         - [5935,5935,0,0,punct]
         line [5936,5939,0,0,alpha]
         " [5940,5940,0,0,punct]
   } [5958,5958,0,0,punct, ("level" 4)]
   ] [5972,5972,0,0,punct, ("level" 3)]
   } [5982,5982,0,0,punct, ("level" 2)]
   , [5983,5983,0,0,punct]
   _key [5993,6008,5,16,node, ("text" "comment-block")]
      " [5993,5993,0,0,punct]
      comment [5994,6000,0,0,alpha]
      - [6001,6001,0,0,punct]
      block [6002,6006,0,0,alpha]
      " [6007,6007,0,0,punct]
      : [6008,6008,0,0,punct]
   { [6010,6010,0,0,punct, ("level" 2)]
   _keyValue [6024,6039,6,16,node, ("key" "begin")]
      _key [6024,6031,5,16,node, ("text" "begin")]
         " [6024,6024,0,0,punct]
         begin [6025,6029,0,0,alpha]
         " [6030,6030,0,0,punct]
         : [6031,6031,0,0,punct]
      _value [6033,6038,5,28,node, ("text" "/\\*")]
         " [6033,6033,0,0,punct]
         / [6034,6034,0,0,punct]
         \\ [6035,6035,0,0,punct]
         \\ [6036,6036,0,0,punct]
         * [6037,6037,0,0,punct]
         " [6038,6038,0,0,punct]
      , [6039,6039,0,0,punct]
   _keyValue [6053,6066,6,16,node, ("key" "end")]
      _key [6053,6058,5,16,node, ("text" "end")]
         " [6053,6053,0,0,punct]
         end [6054,6056,0,0,alpha]
         " [6057,6057,0,0,punct]
         : [6058,6058,0,0,punct]
      _value [6060,6065,5,28,node, ("text" "\\*/")]
         " [6060,6060,0,0,punct]
         \\ [6061,6061,0,0,punct]
         \\ [6062,6062,0,0,punct]
         * [6063,6063,0,0,punct]
         / [6064,6064,0,0,punct]
         " [6065,6065,0,0,punct]
      , [6066,6066,0,0,punct]
   _keyValue [6080,6106,6,16,node, ("key" "name")]
      _key [6080,6086,5,16,node, ("text" "name")]
         " [6080,6080,0,0,punct]
         name [6081,6084,0,0,alpha]
         " [6085,6085,0,0,punct]
         : [6086,6086,0,0,punct]
      _value [6088,6106,5,28,node, ("text" "comment.block.ecl")]
         " [6088,6088,0,0,punct]
         comment [6089,6095,0,0,alpha]
         . [6096,6096,0,0,punct]
         block [6097,6101,0,0,alpha]
         . [6102,6102,0,0,punct]
         ecl [6103,6105,0,0,alpha]
         " [6106,6106,0,0,punct]
   } [6116,6116,0,0,punct, ("level" 2)]
   , [6117,6117,0,0,punct]
   _key [6127,6146,5,16,node, ("text" "comment-block-doc")]
      " [6127,6127,0,0,punct]
      comment [6128,6134,0,0,alpha]
      - [6135,6135,0,0,punct]
      block [6136,6140,0,0,alpha]
      - [6141,6141,0,0,punct]
      doc [6142,6144,0,0,alpha]
      " [6145,6145,0,0,punct]
      : [6146,6146,0,0,punct]
   { [6148,6148,0,0,punct, ("level" 2)]
   _keyValue [6162,6185,6,16,node, ("key" "begin")]
      _key [6162,6169,5,16,node, ("text" "begin")]
         " [6162,6162,0,0,punct]
         begin [6163,6167,0,0,alpha]
         " [6168,6168,0,0,punct]
         : [6169,6169,0,0,punct]
      _value [6171,6184,5,28,node, ("text" "/\\*\\*(?!/)")]
         " [6171,6171,0,0,punct]
         / [6172,6172,0,0,punct]
         \\ [6173,6173,0,0,punct]
         \\ [6174,6174,0,0,punct]
         * [6175,6175,0,0,punct]
         \\ [6176,6176,0,0,punct]
         \\ [6177,6177,0,0,punct]
         * [6178,6178,0,0,punct]
         ( [6179,6179,0,0,punct]
         ? [6180,6180,0,0,punct]
         ! [6181,6181,0,0,punct]
         / [6182,6182,0,0,punct]
         ) [6183,6183,0,0,punct]
         " [6184,6184,0,0,punct]
      , [6185,6185,0,0,punct]
   _keyValue [6199,6212,6,16,node, ("key" "end")]
      _key [6199,6204,5,16,node, ("text" "end")]
         " [6199,6199,0,0,punct]
         end [6200,6202,0,0,alpha]
         " [6203,6203,0,0,punct]
         : [6204,6204,0,0,punct]
      _value [6206,6211,5,28,node, ("text" "\\*/")]
         " [6206,6206,0,0,punct]
         \\ [6207,6207,0,0,punct]
         \\ [6208,6208,0,0,punct]
         * [6209,6209,0,0,punct]
         / [6210,6210,0,0,punct]
         " [6211,6211,0,0,punct]
      , [6212,6212,0,0,punct]
   _keyValue [6226,6266,6,16,node, ("key" "name")]
      _key [6226,6232,5,16,node, ("text" "name")]
         " [6226,6226,0,0,punct]
         name [6227,6230,0,0,alpha]
         " [6231,6231,0,0,punct]
         : [6232,6232,0,0,punct]
      _value [6234,6266,5,28,node, ("text" "comment.block.documentation.ecl")]
         " [6234,6234,0,0,punct]
         comment [6235,6241,0,0,alpha]
         . [6242,6242,0,0,punct]
         block [6243,6247,0,0,alpha]
         . [6248,6248,0,0,punct]
         documentation [6249,6261,0,0,alpha]
         . [6262,6262,0,0,punct]
         ecl [6263,6265,0,0,alpha]
         " [6266,6266,0,0,punct]
   } [6276,6276,0,0,punct, ("level" 2)]
   , [6277,6277,0,0,punct]
   _key [6287,6301,5,16,node, ("text" "comment-line")]
      " [6287,6287,0,0,punct]
      comment [6288,6294,0,0,alpha]
      - [6295,6295,0,0,punct]
      line [6296,6299,0,0,alpha]
      " [6300,6300,0,0,punct]
      : [6301,6301,0,0,punct]
   { [6303,6303,0,0,punct, ("level" 2)]
   _keyValue [6317,6339,6,16,node, ("key" "match")]
      _key [6317,6324,5,16,node, ("text" "match")]
         " [6317,6317,0,0,punct]
         match [6318,6322,0,0,alpha]
         " [6323,6323,0,0,punct]
         : [6324,6324,0,0,punct]
      _match [6326,6338,7,18,node, ("text" "(//).*$\\n?")]
         _value [6326,6338,5,28,node, ("text" "(//).*$\\n?")]
            " [6326,6326,0,0,punct]
            ( [6327,6327,0,0,punct]
            / [6328,6328,0,0,punct]
            / [6329,6329,0,0,punct]
            ) [6330,6330,0,0,punct]
            . [6331,6331,0,0,punct]
            * [6332,6332,0,0,punct]
            $ [6333,6333,0,0,punct]
            \\ [6334,6334,0,0,punct]
            \\ [6335,6335,0,0,punct]
            n [6336,6336,0,0,alpha]
            ? [6337,6337,0,0,punct]
            " [6338,6338,0,0,punct]
      , [6339,6339,0,0,punct]
   _keyValue [6353,6378,6,16,node, ("key" "name")]
      _key [6353,6359,5,16,node, ("text" "name")]
         " [6353,6353,0,0,punct]
         name [6354,6357,0,0,alpha]
         " [6358,6358,0,0,punct]
         : [6359,6359,0,0,punct]
      _value [6361,6378,5,28,node, ("text" "comment.line.ecl")]
         " [6361,6361,0,0,punct]
         comment [6362,6368,0,0,alpha]
         . [6369,6369,0,0,punct]
         line [6370,6373,0,0,alpha]
         . [6374,6374,0,0,punct]
         ecl [6375,6377,0,0,alpha]
         " [6378,6378,0,0,punct]
   } [6388,6388,0,0,punct, ("level" 2)]
   , [6389,6389,0,0,punct]
   _key [6399,6407,5,16,node, ("text" "string")]
      " [6399,6399,0,0,punct]
      string [6400,6405,0,0,alpha]
      " [6406,6406,0,0,punct]
      : [6407,6407,0,0,punct]
   { [6409,6409,0,0,punct, ("level" 2)]
   _keyValue [6423,6443,6,16,node, ("key" "name")]
      _key [6423,6429,5,16,node, ("text" "name")]
         " [6423,6423,0,0,punct]
         name [6424,6427,0,0,alpha]
         " [6428,6428,0,0,punct]
         : [6429,6429,0,0,punct]
      _value [6431,6442,5,28,node, ("text" "string.ecl")]
         " [6431,6431,0,0,punct]
         string [6432,6437,0,0,alpha]
         . [6438,6438,0,0,punct]
         ecl [6439,6441,0,0,alpha]
         " [6442,6442,0,0,punct]
      , [6443,6443,0,0,punct]
   _key [6457,6467,5,16,node, ("text" "patterns")]
      " [6457,6457,0,0,punct]
      patterns [6458,6465,0,0,alpha]
      " [6466,6466,0,0,punct]
      : [6467,6467,0,0,punct]
   [ [6469,6469,0,0,punct, ("level" 3)]
   { [6487,6487,0,0,punct, ("level" 4)]
   _keyValue [6509,6536,6,16,node, ("key" "include")]
      _key [6509,6518,5,16,node, ("text" "include")]
         " [6509,6509,0,0,punct]
         include [6510,6516,0,0,alpha]
         " [6517,6517,0,0,punct]
         : [6518,6518,0,0,punct]
      _value [6520,6536,5,28,node, ("text" "#qstring-single")]
         " [6520,6520,0,0,punct]
         # [6521,6521,0,0,punct]
         qstring [6522,6528,0,0,alpha]
         - [6529,6529,0,0,punct]
         single [6530,6535,0,0,alpha]
         " [6536,6536,0,0,punct]
   } [6554,6554,0,0,punct, ("level" 4)]
   ] [6568,6568,0,0,punct, ("level" 3)]
   } [6578,6578,0,0,punct, ("level" 2)]
   , [6579,6579,0,0,punct]
   _key [6589,6605,5,16,node, ("text" "qstring-single")]
      " [6589,6589,0,0,punct]
      qstring [6590,6596,0,0,alpha]
      - [6597,6597,0,0,punct]
      single [6598,6603,0,0,alpha]
      " [6604,6604,0,0,punct]
      : [6605,6605,0,0,punct]
   { [6607,6607,0,0,punct, ("level" 2)]
   _keyValue [6621,6633,6,16,node, ("key" "begin")]
      _key [6621,6628,5,16,node, ("text" "begin")]
         " [6621,6621,0,0,punct]
         begin [6622,6626,0,0,alpha]
         " [6627,6627,0,0,punct]
         : [6628,6628,0,0,punct]
      _value [6630,6632,5,28,node, ("text" "\'")]
         " [6630,6630,0,0,punct]
         ' [6631,6631,0,0,punct]
         " [6632,6632,0,0,punct]
      , [6633,6633,0,0,punct]
   _keyValue [6647,6675,6,16,node, ("key" "end")]
      _key [6647,6652,5,16,node, ("text" "end")]
         " [6647,6647,0,0,punct]
         end [6648,6650,0,0,alpha]
         " [6651,6651,0,0,punct]
         : [6652,6652,0,0,punct]
      _value [6654,6674,5,28,node, ("text" "\\'|(?:[^\\\\\\n]$)")]
         " [6654,6654,0,0,punct]
         \\ [6655,6655,0,0,punct]
         \\ [6656,6656,0,0,punct]
         ' [6657,6657,0,0,punct]
         | [6658,6658,0,0,punct]
         ( [6659,6659,0,0,punct]
         ? [6660,6660,0,0,punct]
         : [6661,6661,0,0,punct]
         [ [6662,6662,0,0,punct, ("level" 3)]
         ^ [6663,6663,0,0,punct]
         \\ [6664,6664,0,0,punct]
         \\ [6665,6665,0,0,punct]
         \\ [6666,6666,0,0,punct]
         \\ [6667,6667,0,0,punct]
         \\ [6668,6668,0,0,punct]
         \\ [6669,6669,0,0,punct]
         n [6670,6670,0,0,alpha]
         ] [6671,6671,0,0,punct, ("level" 3)]
         $ [6672,6672,0,0,punct]
         ) [6673,6673,0,0,punct]
         " [6674,6674,0,0,punct]
      , [6675,6675,0,0,punct]
   _keyValue [6689,6716,6,16,node, ("key" "name")]
      _key [6689,6695,5,16,node, ("text" "name")]
         " [6689,6689,0,0,punct]
         name [6690,6693,0,0,alpha]
         " [6694,6694,0,0,punct]
         : [6695,6695,0,0,punct]
      _value [6697,6715,5,28,node, ("text" "string.single.ecl")]
         " [6697,6697,0,0,punct]
         string [6698,6703,0,0,alpha]
         . [6704,6704,0,0,punct]
         single [6705,6710,0,0,alpha]
         . [6711,6711,0,0,punct]
         ecl [6712,6714,0,0,alpha]
         " [6715,6715,0,0,punct]
      , [6716,6716,0,0,punct]
   _key [6730,6740,5,16,node, ("text" "patterns")]
      " [6730,6730,0,0,punct]
      patterns [6731,6738,0,0,alpha]
      " [6739,6739,0,0,punct]
      : [6740,6740,0,0,punct]
   [ [6742,6742,0,0,punct, ("level" 3)]
   { [6760,6760,0,0,punct, ("level" 4)]
   _keyValue [6782,6818,6,16,node, ("key" "include")]
      _key [6782,6791,5,16,node, ("text" "include")]
         " [6782,6782,0,0,punct]
         include [6783,6789,0,0,alpha]
         " [6790,6790,0,0,punct]
         : [6791,6791,0,0,punct]
      _value [6793,6818,5,28,node, ("text" "#string-character-escape")]
         " [6793,6793,0,0,punct]
         # [6794,6794,0,0,punct]
         string [6795,6800,0,0,alpha]
         - [6801,6801,0,0,punct]
         character [6802,6810,0,0,alpha]
         - [6811,6811,0,0,punct]
         escape [6812,6817,0,0,alpha]
         " [6818,6818,0,0,punct]
   } [6836,6836,0,0,punct, ("level" 4)]
   ] [6850,6850,0,0,punct, ("level" 3)]
   } [6860,6860,0,0,punct, ("level" 2)]
   , [6861,6861,0,0,punct]
   _key [6871,6896,5,16,node, ("text" "string-character-escape")]
      " [6871,6871,0,0,punct]
      string [6872,6877,0,0,alpha]
      - [6878,6878,0,0,punct]
      character [6879,6887,0,0,alpha]
      - [6888,6888,0,0,punct]
      escape [6889,6894,0,0,alpha]
      " [6895,6895,0,0,punct]
      : [6896,6896,0,0,punct]
   { [6898,6898,0,0,punct, ("level" 2)]
   _keyValue [6912,6989,6,16,node, ("key" "match")]
      _key [6912,6919,5,16,node, ("text" "match")]
         " [6912,6912,0,0,punct]
         match [6913,6917,0,0,alpha]
         " [6918,6918,0,0,punct]
         : [6919,6919,0,0,punct]
      _match [6921,6988,7,18,node, ("text" "\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)")]
         _value [6921,6988,5,28,node, ("text" "\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)")]
            " [6921,6921,0,0,punct]
            \\ [6922,6922,0,0,punct]
            \\ [6923,6923,0,0,punct]
            \\ [6924,6924,0,0,punct]
            \\ [6925,6925,0,0,punct]
            ( [6926,6926,0,0,punct]
            x [6927,6927,0,0,alpha]
            \\ [6928,6928,0,0,punct]
            \\ [6929,6929,0,0,punct]
            h [6930,6930,0,0,alpha]
            { [6931,6931,0,0,punct, ("level" 3)]
            2 [6932,6932,0,0,num]
            } [6933,6933,0,0,punct, ("level" 3)]
            | [6934,6934,0,0,punct]
            [ [6935,6935,0,0,punct, ("level" 3)]
            0 [6936,6936,0,0,num]
            - [6937,6937,0,0,punct]
            2 [6938,6938,0,0,num]
            ] [6939,6939,0,0,punct, ("level" 3)]
            [ [6940,6940,0,0,punct, ("level" 3)]
            0 [6941,6941,0,0,num]
            - [6942,6942,0,0,punct]
            7 [6943,6943,0,0,num]
            ] [6944,6944,0,0,punct, ("level" 3)]
            { [6945,6945,0,0,punct, ("level" 3)]
            , [6946,6946,0,0,punct]
            2 [6947,6947,0,0,num]
            } [6948,6948,0,0,punct, ("level" 3)]
            | [6949,6949,0,0,punct]
            3 [6950,6950,0,0,num]
            [ [6951,6951,0,0,punct, ("level" 3)]
            0 [6952,6952,0,0,num]
            - [6953,6953,0,0,punct]
            6 [6954,6954,0,0,num]
            ] [6955,6955,0,0,punct, ("level" 3)]
            [ [6956,6956,0,0,punct, ("level" 3)]
            0 [6957,6957,0,0,num]
            - [6958,6958,0,0,punct]
            7 [6959,6959,0,0,num]
            ] [6960,6960,0,0,punct, ("level" 3)]
            ? [6961,6961,0,0,punct]
            | [6962,6962,0,0,punct]
            37 [6963,6964,0,0,num]
            [ [6965,6965,0,0,punct, ("level" 3)]
            0 [6966,6966,0,0,num]
            - [6967,6967,0,0,punct]
            7 [6968,6968,0,0,num]
            ] [6969,6969,0,0,punct, ("level" 3)]
            ? [6970,6970,0,0,punct]
            | [6971,6971,0,0,punct]
            [ [6972,6972,0,0,punct, ("level" 3)]
            4 [6973,6973,0,0,num]
            - [6974,6974,0,0,punct]
            7 [6975,6975,0,0,num]
            ] [6976,6976,0,0,punct, ("level" 3)]
            [ [6977,6977,0,0,punct, ("level" 3)]
            0 [6978,6978,0,0,num]
            - [6979,6979,0,0,punct]
            7 [6980,6980,0,0,num]
            ] [6981,6981,0,0,punct, ("level" 3)]
            ? [6982,6982,0,0,punct]
            | [6983,6983,0,0,punct]
            . [6984,6984,0,0,punct]
            | [6985,6985,0,0,punct]
            $ [6986,6986,0,0,punct]
            ) [6987,6987,0,0,punct]
            " [6988,6988,0,0,punct]
      , [6989,6989,0,0,punct]
   _keyValue [7003,7041,6,16,node, ("key" "name")]
      _key [7003,7009,5,16,node, ("text" "name")]
         " [7003,7003,0,0,punct]
         name [7004,7007,0,0,alpha]
         " [7008,7008,0,0,punct]
         : [7009,7009,0,0,punct]
      _value [7011,7041,5,28,node, ("text" "constant.character.escape.ecl")]
         " [7011,7011,0,0,punct]
         constant [7012,7019,0,0,alpha]
         . [7020,7020,0,0,punct]
         character [7021,7029,0,0,alpha]
         . [7030,7030,0,0,punct]
         escape [7031,7036,0,0,alpha]
         . [7037,7037,0,0,punct]
         ecl [7038,7040,0,0,alpha]
         " [7041,7041,0,0,punct]
   } [7051,7051,0,0,punct, ("level" 2)]
   , [7052,7052,0,0,punct]
   _key [7062,7071,5,16,node, ("text" "literal")]
      " [7062,7062,0,0,punct]
      literal [7063,7069,0,0,alpha]
      " [7070,7070,0,0,punct]
      : [7071,7071,0,0,punct]
   { [7073,7073,0,0,punct, ("level" 2)]
   _keyValue [7087,7108,6,16,node, ("key" "name")]
      _key [7087,7093,5,16,node, ("text" "name")]
         " [7087,7087,0,0,punct]
         name [7088,7091,0,0,alpha]
         " [7092,7092,0,0,punct]
         : [7093,7093,0,0,punct]
      _value [7095,7107,5,28,node, ("text" "literal.ecl")]
         " [7095,7095,0,0,punct]
         literal [7096,7102,0,0,alpha]
         . [7103,7103,0,0,punct]
         ecl [7104,7106,0,0,alpha]
         " [7107,7107,0,0,punct]
      , [7108,7108,0,0,punct]
   _key [7122,7132,5,16,node, ("text" "patterns")]
      " [7122,7122,0,0,punct]
      patterns [7123,7130,0,0,alpha]
      " [7131,7131,0,0,punct]
      : [7132,7132,0,0,punct]
   [ [7134,7134,0,0,punct, ("level" 3)]
   { [7152,7152,0,0,punct, ("level" 4)]
   _keyValue [7174,7202,6,16,node, ("key" "include")]
      _key [7174,7183,5,16,node, ("text" "include")]
         " [7174,7174,0,0,punct]
         include [7175,7181,0,0,alpha]
         " [7182,7182,0,0,punct]
         : [7183,7183,0,0,punct]
      _value [7185,7202,5,28,node, ("text" "#numeric-literal")]
         " [7185,7185,0,0,punct]
         # [7186,7186,0,0,punct]
         numeric [7187,7193,0,0,alpha]
         - [7194,7194,0,0,punct]
         literal [7195,7201,0,0,alpha]
         " [7202,7202,0,0,punct]
   } [7220,7220,0,0,punct, ("level" 4)]
   , [7221,7221,0,0,punct]
   { [7239,7239,0,0,punct, ("level" 4)]
   _keyValue [7261,7289,6,16,node, ("key" "include")]
      _key [7261,7270,5,16,node, ("text" "include")]
         " [7261,7261,0,0,punct]
         include [7262,7268,0,0,alpha]
         " [7269,7269,0,0,punct]
         : [7270,7270,0,0,punct]
      _value [7272,7289,5,28,node, ("text" "#boolean-literal")]
         " [7272,7272,0,0,punct]
         # [7273,7273,0,0,punct]
         boolean [7274,7280,0,0,alpha]
         - [7281,7281,0,0,punct]
         literal [7282,7288,0,0,alpha]
         " [7289,7289,0,0,punct]
   } [7307,7307,0,0,punct, ("level" 4)]
   , [7308,7308,0,0,punct]
   { [7326,7326,0,0,punct, ("level" 4)]
   _keyValue [7348,7374,6,16,node, ("key" "include")]
      _key [7348,7357,5,16,node, ("text" "include")]
         " [7348,7348,0,0,punct]
         include [7349,7355,0,0,alpha]
         " [7356,7356,0,0,punct]
         : [7357,7357,0,0,punct]
      _value [7359,7374,5,28,node, ("text" "#array-literal")]
         " [7359,7359,0,0,punct]
         # [7360,7360,0,0,punct]
         array [7361,7365,0,0,alpha]
         - [7366,7366,0,0,punct]
         literal [7367,7373,0,0,alpha]
         " [7374,7374,0,0,punct]
   } [7392,7392,0,0,punct, ("level" 4)]
   , [7393,7393,0,0,punct]
   { [7411,7411,0,0,punct, ("level" 4)]
   _keyValue [7433,7458,6,16,node, ("key" "include")]
      _key [7433,7442,5,16,node, ("text" "include")]
         " [7433,7433,0,0,punct]
         include [7434,7440,0,0,alpha]
         " [7441,7441,0,0,punct]
         : [7442,7442,0,0,punct]
      _value [7444,7458,5,28,node, ("text" "#self-literal")]
         " [7444,7444,0,0,punct]
         # [7445,7445,0,0,punct]
         self [7446,7449,0,0,alpha]
         - [7450,7450,0,0,punct]
         literal [7451,7457,0,0,alpha]
         " [7458,7458,0,0,punct]
   } [7476,7476,0,0,punct, ("level" 4)]
   ] [7490,7490,0,0,punct, ("level" 3)]
   } [7500,7500,0,0,punct, ("level" 2)]
   , [7501,7501,0,0,punct]
   _key [7511,7528,5,16,node, ("text" "numeric-literal")]
      " [7511,7511,0,0,punct]
      numeric [7512,7518,0,0,alpha]
      - [7519,7519,0,0,punct]
      literal [7520,7526,0,0,alpha]
      " [7527,7527,0,0,punct]
      : [7528,7528,0,0,punct]
   { [7530,7530,0,0,punct, ("level" 2)]
   _keyValue [7544,7677,6,16,node, ("key" "match")]
      _key [7544,7551,5,16,node, ("text" "match")]
         " [7544,7544,0,0,punct]
         match [7545,7549,0,0,alpha]
         " [7550,7550,0,0,punct]
         : [7551,7551,0,0,punct]
      _match [7553,7676,7,18,node, ("text" "\\b(?<=[^$])((0(x|X)[0-9a-fA-F]+)|(0(o|O)[0-7]+)|(0(b|B)(0|1)+)|(([0-9]+(\\.[0-9]+)?))([eE]([+-]?)[0-9]+(\\.[0-9]+)?)?)\\b")]
         _value [7553,7676,5,28,node, ("text" "\\b(?<=[^$])((0(x|X)[0-9a-fA-F]+)|(0(o|O)[0-7]+)|(0(b|B)(0|1)+)|(([0-9]+(\\.[0-9]+)?))([eE]([+-]?)[0-9]+(\\.[0-9]+)?)?)\\b")]
            " [7553,7553,0,0,punct]
            \\ [7554,7554,0,0,punct]
            \\ [7555,7555,0,0,punct]
            b [7556,7556,0,0,alpha]
            ( [7557,7557,0,0,punct]
            ? [7558,7558,0,0,punct]
            < [7559,7559,0,0,punct]
            = [7560,7560,0,0,punct]
            [ [7561,7561,0,0,punct, ("level" 3)]
            ^ [7562,7562,0,0,punct]
            $ [7563,7563,0,0,punct]
            ] [7564,7564,0,0,punct, ("level" 3)]
            ) [7565,7565,0,0,punct]
            ( [7566,7566,0,0,punct]
            ( [7567,7567,0,0,punct]
            0 [7568,7568,0,0,num]
            ( [7569,7569,0,0,punct,fired]
            _list [7570,7572,8,14,node,fired,blt]
               x [7570,7570,0,0,alpha,fired]
               | [7571,7571,0,0,punct,fired]
               X [7572,7572,0,0,alpha,fired]
            ) [7573,7573,0,0,punct]
            [ [7574,7574,0,0,punct, ("level" 3)]
            0 [7575,7575,0,0,num]
            - [7576,7576,0,0,punct]
            9 [7577,7577,0,0,num]
            a [7578,7578,0,0,alpha]
            - [7579,7579,0,0,punct]
            fA [7580,7581,0,0,alpha]
            - [7582,7582,0,0,punct]
            F [7583,7583,0,0,alpha]
            ] [7584,7584,0,0,punct, ("level" 3)]
            + [7585,7585,0,0,punct]
            ) [7586,7586,0,0,punct]
            | [7587,7587,0,0,punct]
            ( [7588,7588,0,0,punct]
            0 [7589,7589,0,0,num]
            ( [7590,7590,0,0,punct,fired]
            _list [7591,7593,8,14,node,fired,blt]
               o [7591,7591,0,0,alpha,fired]
               | [7592,7592,0,0,punct,fired]
               O [7593,7593,0,0,alpha,fired]
            ) [7594,7594,0,0,punct]
            [ [7595,7595,0,0,punct, ("level" 3)]
            0 [7596,7596,0,0,num]
            - [7597,7597,0,0,punct]
            7 [7598,7598,0,0,num]
            ] [7599,7599,0,0,punct, ("level" 3)]
            + [7600,7600,0,0,punct]
            ) [7601,7601,0,0,punct]
            | [7602,7602,0,0,punct]
            ( [7603,7603,0,0,punct]
            0 [7604,7604,0,0,num]
            ( [7605,7605,0,0,punct,fired]
            _list [7606,7608,8,14,node,fired,blt]
               b [7606,7606,0,0,alpha,fired]
               | [7607,7607,0,0,punct,fired]
               B [7608,7608,0,0,alpha,fired]
            ) [7609,7609,0,0,punct]
            ( [7610,7610,0,0,punct,fired]
            _list [7611,7613,8,14,node,fired,blt]
               0 [7611,7611,0,0,num,fired]
               | [7612,7612,0,0,punct,fired]
               1 [7613,7613,0,0,num,fired]
            ) [7614,7614,0,0,punct]
            + [7615,7615,0,0,punct]
            ) [7616,7616,0,0,punct]
            | [7617,7617,0,0,punct]
            ( [7618,7618,0,0,punct]
            ( [7619,7619,0,0,punct]
            [ [7620,7620,0,0,punct, ("level" 3)]
            0 [7621,7621,0,0,num]
            - [7622,7622,0,0,punct]
            9 [7623,7623,0,0,num]
            ] [7624,7624,0,0,punct, ("level" 3)]
            + [7625,7625,0,0,punct]
            ( [7626,7626,0,0,punct]
            \\ [7627,7627,0,0,punct]
            \\ [7628,7628,0,0,punct]
            . [7629,7629,0,0,punct]
            [ [7630,7630,0,0,punct, ("level" 3)]
            0 [7631,7631,0,0,num]
            - [7632,7632,0,0,punct]
            9 [7633,7633,0,0,num]
            ] [7634,7634,0,0,punct, ("level" 3)]
            + [7635,7635,0,0,punct]
            ) [7636,7636,0,0,punct]
            ? [7637,7637,0,0,punct]
            ) [7638,7638,0,0,punct]
            ) [7639,7639,0,0,punct]
            ( [7640,7640,0,0,punct]
            [ [7641,7641,0,0,punct, ("level" 3)]
            eE [7642,7643,0,0,alpha]
            ] [7644,7644,0,0,punct, ("level" 3)]
            ( [7645,7645,0,0,punct]
            [ [7646,7646,0,0,punct, ("level" 3)]
            + [7647,7647,0,0,punct]
            - [7648,7648,0,0,punct]
            ] [7649,7649,0,0,punct, ("level" 3)]
            ? [7650,7650,0,0,punct]
            ) [7651,7651,0,0,punct]
            [ [7652,7652,0,0,punct, ("level" 3)]
            0 [7653,7653,0,0,num]
            - [7654,7654,0,0,punct]
            9 [7655,7655,0,0,num]
            ] [7656,7656,0,0,punct, ("level" 3)]
            + [7657,7657,0,0,punct]
            ( [7658,7658,0,0,punct]
            \\ [7659,7659,0,0,punct]
            \\ [7660,7660,0,0,punct]
            . [7661,7661,0,0,punct]
            [ [7662,7662,0,0,punct, ("level" 3)]
            0 [7663,7663,0,0,num]
            - [7664,7664,0,0,punct]
            9 [7665,7665,0,0,num]
            ] [7666,7666,0,0,punct, ("level" 3)]
            + [7667,7667,0,0,punct]
            ) [7668,7668,0,0,punct]
            ? [7669,7669,0,0,punct]
            ) [7670,7670,0,0,punct]
            ? [7671,7671,0,0,punct]
            ) [7672,7672,0,0,punct]
            \\ [7673,7673,0,0,punct]
            \\ [7674,7674,0,0,punct]
            b [7675,7675,0,0,alpha]
            " [7676,7676,0,0,punct]
      , [7677,7677,0,0,punct]
   _keyValue [7691,7720,6,16,node, ("key" "name")]
      _key [7691,7697,5,16,node, ("text" "name")]
         " [7691,7691,0,0,punct]
         name [7692,7695,0,0,alpha]
         " [7696,7696,0,0,punct]
         : [7697,7697,0,0,punct]
      _value [7699,7720,5,28,node, ("text" "constant.numeric.ecl")]
         " [7699,7699,0,0,punct]
         constant [7700,7707,0,0,alpha]
         . [7708,7708,0,0,punct]
         numeric [7709,7715,0,0,alpha]
         . [7716,7716,0,0,punct]
         ecl [7717,7719,0,0,alpha]
         " [7720,7720,0,0,punct]
   } [7730,7730,0,0,punct, ("level" 2)]
   , [7731,7731,0,0,punct]
   _key [7741,7758,5,16,node, ("text" "boolean-literal")]
      " [7741,7741,0,0,punct]
      boolean [7742,7748,0,0,alpha]
      - [7749,7749,0,0,punct]
      literal [7750,7756,0,0,alpha]
      " [7757,7757,0,0,punct]
      : [7758,7758,0,0,punct]
   { [7760,7760,0,0,punct, ("level" 2)]
   _keyValue [7774,7808,6,16,node, ("key" "match")]
      _key [7774,7781,5,16,node, ("text" "match")]
         " [7774,7774,0,0,punct]
         match [7775,7779,0,0,alpha]
         " [7780,7780,0,0,punct]
         : [7781,7781,0,0,punct]
      _match [7783,7807,7,18,node, ("text" "\\b(?i:(false|true))\\b")]
         _value [7783,7807,5,28,node, ("text" "\\b(?i:(false|true))\\b")]
            " [7783,7783,0,0,punct]
            \\ [7784,7784,0,0,punct]
            \\ [7785,7785,0,0,punct]
            b [7786,7786,0,0,alpha]
            ( [7787,7787,0,0,punct]
            ? [7788,7788,0,0,punct]
            i [7789,7789,0,0,alpha]
            : [7790,7790,0,0,punct]
            ( [7791,7791,0,0,punct,fired]
            _list [7792,7801,8,14,node,fired,blt]
               false [7792,7796,0,0,alpha,fired]
               | [7797,7797,0,0,punct,fired]
               true [7798,7801,0,0,alpha,fired]
            ) [7802,7802,0,0,punct]
            ) [7803,7803,0,0,punct]
            \\ [7804,7804,0,0,punct]
            \\ [7805,7805,0,0,punct]
            b [7806,7806,0,0,alpha]
            " [7807,7807,0,0,punct]
      , [7808,7808,0,0,punct]
   _keyValue [7822,7860,6,16,node, ("key" "name")]
      _key [7822,7828,5,16,node, ("text" "name")]
         " [7822,7822,0,0,punct]
         name [7823,7826,0,0,alpha]
         " [7827,7827,0,0,punct]
         : [7828,7828,0,0,punct]
      _value [7830,7860,5,28,node, ("text" "constant.language.boolean.ecl")]
         " [7830,7830,0,0,punct]
         constant [7831,7838,0,0,alpha]
         . [7839,7839,0,0,punct]
         language [7840,7847,0,0,alpha]
         . [7848,7848,0,0,punct]
         boolean [7849,7855,0,0,alpha]
         . [7856,7856,0,0,punct]
         ecl [7857,7859,0,0,alpha]
         " [7860,7860,0,0,punct]
   } [7870,7870,0,0,punct, ("level" 2)]
   , [7871,7871,0,0,punct]
   _key [7881,7895,5,16,node, ("text" "self-literal")]
      " [7881,7881,0,0,punct]
      self [7882,7885,0,0,alpha]
      - [7886,7886,0,0,punct]
      literal [7887,7893,0,0,alpha]
      " [7894,7894,0,0,punct]
      : [7895,7895,0,0,punct]
   { [7897,7897,0,0,punct, ("level" 2)]
   _keyValue [7911,7939,6,16,node, ("key" "match")]
      _key [7911,7918,5,16,node, ("text" "match")]
         " [7911,7911,0,0,punct]
         match [7912,7916,0,0,alpha]
         " [7917,7917,0,0,punct]
         : [7918,7918,0,0,punct]
      _match [7920,7938,7,18,node, ("text" "\\b(?i:(self))\\b")]
         _value [7920,7938,5,28,node, ("text" "\\b(?i:(self))\\b")]
            " [7920,7920,0,0,punct]
            \\ [7921,7921,0,0,punct]
            \\ [7922,7922,0,0,punct]
            b [7923,7923,0,0,alpha]
            ( [7924,7924,0,0,punct]
            ? [7925,7925,0,0,punct]
            i [7926,7926,0,0,alpha]
            : [7927,7927,0,0,punct]
            ( [7928,7928,0,0,punct]
            self [7929,7932,0,0,alpha]
            ) [7933,7933,0,0,punct]
            ) [7934,7934,0,0,punct]
            \\ [7935,7935,0,0,punct]
            \\ [7936,7936,0,0,punct]
            b [7937,7937,0,0,alpha]
            " [7938,7938,0,0,punct]
      , [7939,7939,0,0,punct]
   _keyValue [7953,7988,6,16,node, ("key" "name")]
      _key [7953,7959,5,16,node, ("text" "name")]
         " [7953,7953,0,0,punct]
         name [7954,7957,0,0,alpha]
         " [7958,7958,0,0,punct]
         : [7959,7959,0,0,punct]
      _value [7961,7988,5,28,node, ("text" "constant.language.this.ecl")]
         " [7961,7961,0,0,punct]
         constant [7962,7969,0,0,alpha]
         . [7970,7970,0,0,punct]
         language [7971,7978,0,0,alpha]
         . [7979,7979,0,0,punct]
         this [7980,7983,0,0,alpha]
         . [7984,7984,0,0,punct]
         ecl [7985,7987,0,0,alpha]
         " [7988,7988,0,0,punct]
   } [7998,7998,0,0,punct, ("level" 2)]
   , [7999,7999,0,0,punct]
   _key [8009,8024,5,16,node, ("text" "array-literal")]
      " [8009,8009,0,0,punct]
      array [8010,8014,0,0,alpha]
      - [8015,8015,0,0,punct]
      literal [8016,8022,0,0,alpha]
      " [8023,8023,0,0,punct]
      : [8024,8024,0,0,punct]
   { [8026,8026,0,0,punct, ("level" 2)]
   _keyValue [8040,8054,6,16,node, ("key" "begin")]
      _key [8040,8047,5,16,node, ("text" "begin")]
         " [8040,8040,0,0,punct]
         begin [8041,8045,0,0,alpha]
         " [8046,8046,0,0,punct]
         : [8047,8047,0,0,punct]
      _value [8049,8053,5,28,node, ("text" "\\[")]
         " [8049,8049,0,0,punct]
         \\ [8050,8050,0,0,punct]
         \\ [8051,8051,0,0,punct]
         [ [8052,8052,0,0,punct, ("level" 3)]
         " [8053,8053,0,0,punct]
      , [8054,8054,0,0,punct]
   _key [8068,8083,5,16,node, ("text" "beginCaptures")]
      " [8068,8068,0,0,punct]
      beginCaptures [8069,8081,0,0,alpha]
      " [8082,8082,0,0,punct]
      : [8083,8083,0,0,punct]
   { [8085,8085,0,0,punct, ("level" 4)]
   _key [8103,8106,5,16,node, ("text" "0")]
      " [8103,8103,0,0,punct]
      0 [8104,8104,0,0,num]
      " [8105,8105,0,0,punct]
      : [8106,8106,0,0,punct]
   { [8108,8108,0,0,punct, ("level" 5)]
   _keyValue [8130,8160,6,16,node, ("key" "name")]
      _key [8130,8136,5,16,node, ("text" "name")]
         " [8130,8130,0,0,punct]
         name [8131,8134,0,0,alpha]
         " [8135,8135,0,0,punct]
         : [8136,8136,0,0,punct]
      _value [8138,8160,5,28,node, ("text" "meta.brace.square.ecl")]
         " [8138,8138,0,0,punct]
         meta [8139,8142,0,0,alpha]
         . [8143,8143,0,0,punct]
         brace [8144,8148,0,0,alpha]
         . [8149,8149,0,0,punct]
         square [8150,8155,0,0,alpha]
         . [8156,8156,0,0,punct]
         ecl [8157,8159,0,0,alpha]
         " [8160,8160,0,0,punct]
   } [8178,8178,0,0,punct, ("level" 5)]
   } [8192,8192,0,0,punct, ("level" 4)]
   , [8193,8193,0,0,punct]
   _keyValue [8207,8219,6,16,node, ("key" "end")]
      _key [8207,8212,5,16,node, ("text" "end")]
         " [8207,8207,0,0,punct]
         end [8208,8210,0,0,alpha]
         " [8211,8211,0,0,punct]
         : [8212,8212,0,0,punct]
      _value [8214,8218,5,28,node, ("text" "\\]")]
         " [8214,8214,0,0,punct]
         \\ [8215,8215,0,0,punct]
         \\ [8216,8216,0,0,punct]
         ] [8217,8217,0,0,punct, ("level" 3)]
         " [8218,8218,0,0,punct]
      , [8219,8219,0,0,punct]
   _key [8233,8246,5,16,node, ("text" "endCaptures")]
      " [8233,8233,0,0,punct]
      endCaptures [8234,8244,0,0,alpha]
      " [8245,8245,0,0,punct]
      : [8246,8246,0,0,punct]
   { [8248,8248,0,0,punct, ("level" 3)]
   _key [8266,8269,5,16,node, ("text" "0")]
      " [8266,8266,0,0,punct]
      0 [8267,8267,0,0,num]
      " [8268,8268,0,0,punct]
      : [8269,8269,0,0,punct]
   { [8271,8271,0,0,punct, ("level" 4)]
   _keyValue [8293,8323,6,16,node, ("key" "name")]
      _key [8293,8299,5,16,node, ("text" "name")]
         " [8293,8293,0,0,punct]
         name [8294,8297,0,0,alpha]
         " [8298,8298,0,0,punct]
         : [8299,8299,0,0,punct]
      _value [8301,8323,5,28,node, ("text" "meta.brace.square.ecl")]
         " [8301,8301,0,0,punct]
         meta [8302,8305,0,0,alpha]
         . [8306,8306,0,0,punct]
         brace [8307,8311,0,0,alpha]
         . [8312,8312,0,0,punct]
         square [8313,8318,0,0,alpha]
         . [8319,8319,0,0,punct]
         ecl [8320,8322,0,0,alpha]
         " [8323,8323,0,0,punct]
   } [8341,8341,0,0,punct, ("level" 4)]
   } [8355,8355,0,0,punct, ("level" 3)]
   , [8356,8356,0,0,punct]
   _keyValue [8370,8402,6,16,node, ("key" "name")]
      _key [8370,8376,5,16,node, ("text" "name")]
         " [8370,8370,0,0,punct]
         name [8371,8374,0,0,alpha]
         " [8375,8375,0,0,punct]
         : [8376,8376,0,0,punct]
      _value [8378,8401,5,28,node, ("text" "meta.array.literal.ecl")]
         " [8378,8378,0,0,punct]
         meta [8379,8382,0,0,alpha]
         . [8383,8383,0,0,punct]
         array [8384,8388,0,0,alpha]
         . [8389,8389,0,0,punct]
         literal [8390,8396,0,0,alpha]
         . [8397,8397,0,0,punct]
         ecl [8398,8400,0,0,alpha]
         " [8401,8401,0,0,punct]
      , [8402,8402,0,0,punct]
   _key [8416,8426,5,16,node, ("text" "patterns")]
      " [8416,8416,0,0,punct]
      patterns [8417,8424,0,0,alpha]
      " [8425,8425,0,0,punct]
      : [8426,8426,0,0,punct]
   [ [8428,8428,0,0,punct, ("level" 3)]
   { [8446,8446,0,0,punct, ("level" 4)]
   _keyValue [8468,8491,6,16,node, ("key" "include")]
      _key [8468,8477,5,16,node, ("text" "include")]
         " [8468,8468,0,0,punct]
         include [8469,8475,0,0,alpha]
         " [8476,8476,0,0,punct]
         : [8477,8477,0,0,punct]
      _value [8479,8491,5,28,node, ("text" "#expression")]
         " [8479,8479,0,0,punct]
         # [8480,8480,0,0,punct]
         expression [8481,8490,0,0,alpha]
         " [8491,8491,0,0,punct]
   } [8509,8509,0,0,punct, ("level" 4)]
   ] [8523,8523,0,0,punct, ("level" 3)]
   } [8533,8533,0,0,punct, ("level" 2)]
   } [8539,8539,0,0,punct, ("level" 1)]
   } [8541,8541,0,0,punct, ("level" 0)]
